{
    "openapi": "3.1.0",
    "info": {
        "title": "Elise API - Vendor Access",
        "description": "EliseAI API documentation",
        "version": "0.1.0"
    },
    "security": [
        {
            "VendorBearer": []
        }
    ],
    "paths": {
        "/v1/prospect/{elise_prospect_id}": {
            "get": {
                "tags": [
                    "Prospect"
                ],
                "summary": "Get Prospect",
                "description": "Note: Additional fields may be added",
                "operationId": "get_prospect_v1_prospect__elise_prospect_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Elise Prospect Id"
                        },
                        "name": "elise_prospect_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EliseProspect"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospect": {
            "post": {
                "tags": [
                    "Prospect"
                ],
                "summary": "Create Prospect Endpoint",
                "description": "Note: Additional event types or fields may be added",
                "operationId": "create_prospect_endpoint_v1_prospect_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProspectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProspectResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospect/vendor_chat": {
            "post": {
                "tags": [
                    "Prospect"
                ],
                "summary": "Post Vendor Chat",
                "description": "[BETA] Vendor chat",
                "operationId": "post_vendor_chat_v1_prospect_vendor_chat_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorChatRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/appointments/availability": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Get Appointment Availability",
                "operationId": "get_appointment_availability_v1_property__property_id__appointments_availability_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Start Time"
                        },
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "End Time"
                        },
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/TourType"
                            },
                            "type": "array"
                        },
                        "name": "tour_types[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentAvailability"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospect/{elise_prospect_id}/appointment": {
            "post": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Book Appointment For Prospect",
                "description": "Book an appointment for an existing prospect",
                "operationId": "book_appointment_for_prospect_v1_prospect__elise_prospect_id__appointment_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Elise Prospect Id"
                        },
                        "name": "elise_prospect_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppointmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospect/appointment": {
            "post": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Create Prospect With Appointment",
                "description": "Create a new prospect with an appointment",
                "operationId": "create_prospect_with_appointment_v1_prospect_appointment_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProspectAppointmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProspectAppointmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/appointment/{appointment_id}": {
            "delete": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Cancel Appointment",
                "description": "Cancel an existing appointment",
                "operationId": "cancel_appointment_v1_appointment__appointment_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Appointment Id"
                        },
                        "name": "appointment_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Update Appointment",
                "description": "Reschedule appointment or update appointment type",
                "operationId": "update_appointment_v1_appointment__appointment_id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Appointment Id"
                        },
                        "name": "appointment_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAppointmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/appointment/{appointment_id}/outcome": {
            "post": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Mark Appointment Outcome",
                "description": "Mark appointment outcome",
                "operationId": "mark_appointment_outcome_v1_appointment__appointment_id__outcome_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Appointment Id"
                        },
                        "name": "appointment_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarkAppointmentOutcomeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarkAppointmentOutcomeResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/task": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Tasks",
                "operationId": "get_tasks_v1_task_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Only Open",
                            "default": true
                        },
                        "name": "only_open",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    },
                                    "type": "array",
                                    "title": "Response Get Tasks V1 Task Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/lead-sources": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Get Property Lead Sources",
                "description": "Get all lead sources for a property",
                "operationId": "get_property_lead_sources_v1_property__property_id__lead_sources_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadSourcesResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/activity": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Get Property Activity",
                "operationId": "get_property_activity_v1_property__property_id__activity_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Start Date"
                        },
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "End Date"
                        },
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    },
                                    "type": "array",
                                    "title": "Response Get Property Activity V1 Property  Property Id  Activity Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/residents": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Get Property Residents",
                "operationId": "get_property_residents_v1_property__property_id__residents_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Offset",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Resident"
                                    },
                                    "type": "array",
                                    "title": "Response Get Property Residents V1 Property  Property Id  Residents Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/units/{unit_id}": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Get Unit",
                "description": "Get a unit by ID and lease term",
                "operationId": "get_unit_v1_property__property_id__units__unit_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Unit Id"
                        },
                        "name": "unit_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Lease Term"
                        },
                        "name": "lease_term",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Move In Date"
                        },
                        "name": "move_in_date",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Include Price",
                            "default": false
                        },
                        "name": "include_price",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/units": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Units",
                "operationId": "property_units_v1_property__property_id__units_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Include Price",
                            "default": false
                        },
                        "name": "include_price",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Floorplan Name"
                        },
                        "name": "floorplan_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Num Bedrooms"
                        },
                        "name": "num_bedrooms",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array",
                            "title": "Num Bedrooms List[]"
                        },
                        "name": "num_bedrooms_list[]",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Move In Date Earliest"
                        },
                        "name": "move_in_date_earliest",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Move In Date Latest"
                        },
                        "name": "move_in_date_latest",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Lease Term Min"
                        },
                        "name": "lease_term_min",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Lease Term Max"
                        },
                        "name": "lease_term_max",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Unit Id"
                        },
                        "name": "unit_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Only Available",
                            "default": true
                        },
                        "name": "only_available",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    },
                                    "type": "array",
                                    "title": "Response Property Units V1 Property  Property Id  Units Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}/units/virtual-tour-links": {
            "post": {
                "tags": [
                    "Property"
                ],
                "summary": "Update Virtual Tour Links",
                "description": "Update virtual tour links for multiple units in a property",
                "operationId": "update_virtual_tour_links_v1_property__property_id__units_virtual_tour_links_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id"
                        },
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VirtualTourLinksRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualTourLinksResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/idv/status": {
            "post": {
                "tags": [
                    "Identity Verification"
                ],
                "summary": "Post Idv Status",
                "operationId": "post_idv_status_v1_idv_status_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Body"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/support": {
            "get": {
                "tags": [
                    "support"
                ],
                "summary": "Fetch Support Lookup",
                "operationId": "fetch_support_lookup_v1_support_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Email Requesting"
                        },
                        "name": "user_email_requesting",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Community Name"
                        },
                        "name": "community_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Not Authorized for this endpoint"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/leases/properties/{property_id}/leases": {
            "get": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                    ],
                    "tag": "Private", "public":true
                  }
                },
                "tags": [
                    "Leases"
                ],
                "summary": "List leases with members for a property",
                "description": "Returns a paginated list of leases with their associated members (residents).\n\n**Performance**: All filtering and pagination happens at the database level for optimal performance.\n\n**Available Filters**:\n- Lease status (Current, Future, Former, Notice, Waitlist, UnderEviction, Evicted, Cancelled, Collections, Other)\n- Unit ID (e.g., u_12345)\n- Lease start/end date ranges\n\n**Use Cases**:\n- Get all active leases: `?lease_end_date_from=2024-01-01`\n- Get leases for a specific unit: `?unit_id=u_12345`\n- Get leases starting this year: `?lease_start_date_from=2024-01-01&lease_start_date_to=2024-12-31`",
                "operationId": "list_leases_v2_leases_properties__property_id__leases_get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "description": "Number of leases to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 500.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "description": "Number of leases to return",
                            "default": 100
                        },
                        "example": 25,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Number of leases to skip (for pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0.0,
                            "title": "Offset",
                            "description": "Number of leases to skip (for pagination)",
                            "default": 0
                        },
                        "example": 0,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "description": "Only return leases with this status",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/LeaseStatus"
                                }
                            ],
                            "description": "Only return leases with this status"
                        },
                        "example": "Current",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "description": "Only return leases for this unit",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Unit Id",
                            "description": "Only return leases for this unit"
                        },
                        "example": "u_12345",
                        "name": "unit_id",
                        "in": "query"
                    },
                    {
                        "description": "Filter leases starting on or after this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Lease Start Date From",
                            "description": "Filter leases starting on or after this date"
                        },
                        "example": "2024-01-01",
                        "name": "lease_start_date_from",
                        "in": "query"
                    },
                    {
                        "description": "Filter leases starting on or before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Lease Start Date To",
                            "description": "Filter leases starting on or before this date"
                        },
                        "example": "2024-12-31",
                        "name": "lease_start_date_to",
                        "in": "query"
                    },
                    {
                        "description": "Filter leases ending on or after this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Lease End Date From",
                            "description": "Filter leases ending on or after this date"
                        },
                        "example": "2024-01-01",
                        "name": "lease_end_date_from",
                        "in": "query"
                    },
                    {
                        "description": "Filter leases ending on or before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "title": "Lease End Date To",
                            "description": "Filter leases ending on or before this date"
                        },
                        "example": "2024-12-31",
                        "name": "lease_end_date_to",
                        "in": "query"
                    },
                    {
                        "description": "Return leases that are currently active or have recently moved out in the last N days.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Only Active Leases Within Last N Days",
                            "description": "Return leases that are currently active or have recently moved out in the last N days."
                        },
                        "example": 30,
                        "name": "only_active_leases_within_last_n_days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of leases with their members",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeasesWithMembersResponse"
                                },
                                "examples": {
                                    "active_leases": {
                                        "summary": "Active leases with residents",
                                        "description": "Response showing current leases with member information",
                                        "value": {
                                            "leases": [
                                                {
                                                    "lease": {
                                                        "id": "lease_550e8400-e29b-41d4-a716-446655440000",
                                                        "unit_id": "u_12345",
                                                        "unit_number": "2A",
                                                        "status": "Current",
                                                        "is_month_to_month": false,
                                                        "lease_term": {
                                                            "start_date": "2024-01-01",
                                                            "end_date": "2024-12-31"
                                                        }
                                                    },
                                                    "members": [
                                                        {
                                                            "resident": {
                                                                "id": "res_a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                                                                "first_name": "Emma",
                                                                "last_name": "Johnson",
                                                                "email": "emma.johnson@example.com"
                                                            },
                                                            "resident_status": "RESIDENT",
                                                            "occupant_type": "PRIMARY",
                                                            "move_in_date": "2024-01-01"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "pagination": {
                                                "total": 45,
                                                "limit": 100,
                                                "offset": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/properties": {
            "get": {
                "tags": [
                    "Properties v2"
                ],
                "summary": "List properties",
                "description": "Returns a paginated list of properties accessible to your integration.\n\nUse this endpoint to discover available properties and their basic information.\nFilter by active/inactive status to find specific properties.\n\n**Access Control**: You will only see properties that your API credentials\nhave been granted access to. Contact your account manager to request access\nto additional properties.",
                "operationId": "list_properties_v2_properties_get",
                "parameters": [
                    {
                        "description": "Number of properties to return (max 500)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 500.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "description": "Number of properties to return (max 500)",
                            "default": 100
                        },
                        "example": 25,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Whether to return only active properties",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Active Only",
                            "description": "Whether to return only active properties",
                            "default": true
                        },
                        "example": true,
                        "name": "active_only",
                        "in": "query"
                    },
                    {
                        "description": "Pagination cursor from previous response. Use the next_cursor value from the previous response to get the next page.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Cursor",
                            "description": "Pagination cursor from previous response. Use the next_cursor value from the previous response to get the next page."
                        },
                        "example": "eyJpZCI6IjEyMzQ1In0=",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Optional filter to include only properties within a given organization",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Organization Id",
                            "description": "Optional filter to include only properties within a given organization"
                        },
                        "name": "organization_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertiesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/properties/{property_id}": {
            "get": {
                "tags": [
                    "Properties v2"
                ],
                "summary": "Retrieve a property",
                "description": "Retrieves comprehensive details for a specific property.\n\nReturns full property information including address, property type, status,\ntotal units, and external system identifiers. Use this to get complete\nproperty context before making other API calls.\n\n**Property IDs**: Property IDs are permanent and unique across the system.\nUse the same ID format returned from the list properties endpoint.",
                "operationId": "get_property_v2_properties__property_id__get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/accounts/{account_id}/summary": {
            "get": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Retrieve account ledger summary",
                "description": "Retrieves a complete financial overview for an account.\n\nReturns balance information, collections status, and a chronological list of all transactions \nthat have affected the account balance. Transactions are returned in a single list sorted by date \n(most recent first) for easy timeline viewing.\n\n**Balance Fields:**\n- **balance_due**: Amount currently owed (only charges with due_date <= today)\n- **total_balance**: Total amount owed including future scheduled charges\n\nWhen there are no future charges, balance_due equals total_balance.\n\n**Collections:**\nAlways includes collections status information for the account (status, when it changed, reason).\n\n**Transaction Types:**\nEach transaction includes a `transaction_type` field that indicates:\n- **CHARGES**: Money owed by resident (rent, utilities, fees) - increases balance\n- **PAYMENTS**: Money received from resident - decreases balance\n- **ADJUSTMENTS**: Balance corrections (credits/debits) - can increase or decrease balance\n\n**Transaction Fields:**\nAll transactions include common fields (id, lease_id, amount, description, transaction_date, created_at, updated_at, transaction_type). The `lease_id` identifies which lease within the account the transaction belongs to.\nType-specific fields are included only when relevant:\n- **Charges**: `charge_code`, `charge_type`, `due_date`, `balance` (remaining unpaid amount)\n- **Payments**: `payment_method`\n- **Adjustments**: `adjustment_type` (credit/debit)\n\n**Query Parameters:**\n- `include_paid_charges` (default: false): When false, only returns transactions for charges with outstanding balances. When true, returns full transaction history within the time window.\n- `history_days` (default: 60, max: 360): Number of days of history to include when `include_paid_charges=true`. Only charges/payments/adjustments within this window are returned.\n\nThe transaction list provides the complete audit trail of how the current balance was calculated.",
                "operationId": "get_account_ledger_summary_v2_ledger_properties__property_id__accounts__account_id__summary_get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "description": "The account ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Account Id",
                            "description": "The account ID"
                        },
                        "example": "account_12345",
                        "name": "account_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "title": "Include Paid Charges",
                            "default": false
                        },
                        "name": "include_paid_charges",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "History Days",
                            "default": 60
                        },
                        "name": "history_days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complete ledger with balance and all financial activity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LedgerSummary"
                                },
                                "example": {
                                    "lease_id": "lease_12345",
                                    "balance_due": 670.5,
                                    "total_balance": 1670.5,
                                    "collections": {
                                        "status": "NOT_IN_COLLECTIONS"
                                    },
                                    "transactions": [
                                        {
                                            "id": "chg_future",
                                            "lease_id": "lease_12345",
                                            "transaction_type": "CHARGE",
                                            "amount": 1000.0,
                                            "description": "March rent for Unit 2A",
                                            "transaction_date": "2024-03-01",
                                            "created_at": "2024-01-01T09:00:00Z",
                                            "updated_at": "2024-01-01T09:00:00Z",
                                            "charge_code": "RENT",
                                            "charge_type": "RENT",
                                            "due_date": "2024-03-01",
                                            "balance": 1000.0
                                        },
                                        {
                                            "id": "chg_12345",
                                            "lease_id": "lease_12345",
                                            "transaction_type": "CHARGE",
                                            "amount": 1250.0,
                                            "description": "Monthly rent for Unit 2A",
                                            "transaction_date": "2024-02-01",
                                            "created_at": "2024-02-01T08:00:00Z",
                                            "updated_at": "2024-02-01T14:30:00Z",
                                            "charge_code": "RENT",
                                            "charge_type": "RENT",
                                            "due_date": "2024-02-01",
                                            "balance": 625.0
                                        },
                                        {
                                            "id": "pay_67890",
                                            "lease_id": "lease_12345",
                                            "transaction_type": "PAYMENT",
                                            "amount": 1250.0,
                                            "description": "Rent payment for January 2024",
                                            "transaction_date": "2024-01-15",
                                            "created_at": "2024-01-15T14:30:00Z",
                                            "updated_at": "2024-01-15T14:30:00Z",
                                            "payment_method": "ACH"
                                        },
                                        {
                                            "id": "chg_54321",
                                            "lease_id": "lease_12345",
                                            "transaction_type": "CHARGE",
                                            "amount": 45.5,
                                            "description": "Water & Sewer - January 2024",
                                            "transaction_date": "2024-02-01",
                                            "created_at": "2024-02-01T08:00:00Z",
                                            "updated_at": "2024-02-01T08:00:00Z",
                                            "charge_code": "WATER",
                                            "charge_type": "UTILITIES",
                                            "due_date": "2024-02-01",
                                            "balance": 45.5
                                        },
                                        {
                                            "id": "adj_78901",
                                            "lease_id": "lease_12345",
                                            "transaction_type": "ADJUSTMENT",
                                            "amount": 250.0,
                                            "description": "Move-in concession - First month 50% off",
                                            "transaction_date": "2024-01-01",
                                            "created_at": "2024-01-01T09:00:00Z",
                                            "updated_at": "2024-01-01T09:00:00Z",
                                            "adjustment_type": "CREDIT"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/charges/batch": {
            "post": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Create charges in batch",
                "description": "Creates multiple charges in a single API call.\n\nUse `external_charge_id` for idempotency.",
                "operationId": "create_batch_charges_v2_ledger_properties__property_id__charges_batch_post",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchChargesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Batch processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchChargesResponse"
                                },
                                "examples": {
                                    "all_successful": {
                                        "summary": "All charges created",
                                        "value": {
                                            "total_requested": 2,
                                            "total_created": 2,
                                            "total_skipped": 0,
                                            "total_failed": 0,
                                            "results": [
                                                {
                                                    "external_charge_id": "water_jan24_unit2a",
                                                    "charge_id": "chg_3NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                },
                                                {
                                                    "external_charge_id": "trash_jan24_unit3b",
                                                    "charge_id": "chg_4NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                }
                                            ]
                                        }
                                    },
                                    "with_duplicates": {
                                        "summary": "Some duplicates skipped",
                                        "value": {
                                            "total_requested": 3,
                                            "total_created": 2,
                                            "total_skipped": 1,
                                            "total_failed": 0,
                                            "results": [
                                                {
                                                    "external_charge_id": "water_jan24_unit2a",
                                                    "charge_id": "chg_3NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                },
                                                {
                                                    "external_charge_id": "water_jan24_unit2b",
                                                    "success": false,
                                                    "error": "Charge with external_charge_id already exists"
                                                },
                                                {
                                                    "external_charge_id": "trash_jan24_unit3b",
                                                    "charge_id": "chg_4NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request - check charge data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Batch exceeds maximum size of 100 charges"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/charges/reverse/batch": {
            "post": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Reverse charges in batch",
                "description": "Reverses multiple charges in a single API call.\n\nUse `external_reversal_id` for idempotency.",
                "operationId": "reverse_batch_charges_v2_ledger_properties__property_id__charges_reverse_batch_post",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchReversalsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Batch processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchReversalsResponse"
                                },
                                "examples": {
                                    "all_successful": {
                                        "summary": "All reversals processed",
                                        "value": {
                                            "total_requested": 2,
                                            "total_processed": 2,
                                            "total_skipped": 0,
                                            "total_failed": 0,
                                            "results": [
                                                {
                                                    "charge_id": "chg_12345",
                                                    "external_reversal_id": "reversal_water_jan24_unit2a",
                                                    "adjustment_id": "adj_5NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                },
                                                {
                                                    "charge_id": "chg_67890",
                                                    "external_reversal_id": "reversal_trash_jan24_unit3b",
                                                    "adjustment_id": "adj_6NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                }
                                            ]
                                        }
                                    },
                                    "with_duplicates": {
                                        "summary": "Some duplicates skipped",
                                        "value": {
                                            "total_requested": 3,
                                            "total_processed": 2,
                                            "total_skipped": 1,
                                            "total_failed": 0,
                                            "results": [
                                                {
                                                    "charge_id": "chg_12345",
                                                    "external_reversal_id": "reversal_water_jan24_unit2a",
                                                    "adjustment_id": "adj_5NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                },
                                                {
                                                    "charge_id": "chg_67890",
                                                    "external_reversal_id": "reversal_water_jan24_unit2b",
                                                    "success": false,
                                                    "error": "Reversal with external_reversal_id already exists"
                                                },
                                                {
                                                    "charge_id": "chg_11111",
                                                    "external_reversal_id": "reversal_trash_jan24_unit3b",
                                                    "adjustment_id": "adj_6NirD82eZvKYlo2CIvbtLWuY",
                                                    "success": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request - check reversal data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Batch exceeds maximum size of 100 reversals"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/payments/batch": {
            "post": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Create payments in batch",
                "description": "Creates multiple payments in a single API call.\n\nPayments are created in SUCCEEDED status and automatically allocated to open charges.\n\nUse `external_payment_id` for idempotency.",
                "operationId": "create_batch_payments_v2_ledger_properties__property_id__payments_batch_post",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchPaymentsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "All payments created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchPaymentsResponse"
                                },
                                "example": {
                                    "total_requested": 2,
                                    "total_created": 2,
                                    "total_skipped": 0,
                                    "total_failed": 0,
                                    "results": [
                                        {
                                            "external_payment_id": "pmt_feb2024_unit2a",
                                            "payment_id": "550e8400-e29b-41d4-a716-446655440000",
                                            "success": true
                                        },
                                        {
                                            "external_payment_id": "pmt_feb2024_unit3b",
                                            "payment_id": "550e8400-e29b-41d4-a716-446655440001",
                                            "success": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/payments/reverse/batch": {
            "post": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Reverse payments in batch (NSF)",
                "description": "Reverses multiple payments in a single API call.\n\nReversing a payment marks it as REVERSED, reverses allocations, and restores affected charges.\n\nUse `external_reversal_id` for idempotency.",
                "operationId": "reverse_batch_payments_v2_ledger_properties__property_id__payments_reverse_batch_post",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchPaymentReversalsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "All reversals processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchPaymentReversalsResponse"
                                },
                                "example": {
                                    "total_requested": 1,
                                    "total_processed": 1,
                                    "total_skipped": 0,
                                    "total_failed": 0,
                                    "results": [
                                        {
                                            "payment_id": "550e8400-e29b-41d4-a716-446655440000",
                                            "external_reversal_id": "reversal_pmt_feb2024",
                                            "success": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/ledger/properties/{property_id}/payments/{external_id}": {
            "get": {
                "x-mint": {
                  "metadata": {
                    "groups": [
                      "ADMIN"
                    ],
                    "tag": "Private"
                  }
                },
                "tags": [
                    "Ledger"
                ],
                "summary": "Get payment by external ID",
                "description": "Retrieves a payment using the external_id that was provided during payment creation.\n\nReturns complete payment details including status, amounts, and metadata.",
                "operationId": "get_payment_by_external_id_v2_ledger_properties__property_id__payments__external_id__get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "example": "12345",
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "description": "External payment ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "External Id",
                            "description": "External payment ID"
                        },
                        "example": "pmt_feb2024_unit2a",
                        "name": "external_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalPayment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "detail": "Payment with external_id 'pmt_feb2024_unit2a' not found"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    }
                }
            }
        },
        "/v2/properties/{property_id}/units": {
            "get": {
                "tags": [
                    "Units v2"
                ],
                "summary": "List Units",
                "description": "Get a paginated list of units for a property with optional filtering",
                "operationId": "list_units_v2_properties__property_id__units_get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "description": "Number of units to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 500.0,
                            "minimum": 1.0,
                            "title": "Limit",
                            "description": "Number of units to return",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Number of units to skip",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0.0,
                            "title": "Offset",
                            "description": "Number of units to skip",
                            "default": 0
                        },
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/properties/{property_id}/units/{unit_id}": {
            "get": {
                "tags": [
                    "Units v2"
                ],
                "summary": "Get Unit",
                "description": "Retrieve detailed unit information",
                "operationId": "get_unit_v2_properties__property_id__units__unit_id__get",
                "parameters": [
                    {
                        "description": "The property ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Property Id",
                            "description": "The property ID"
                        },
                        "name": "property_id",
                        "in": "path"
                    },
                    {
                        "description": "The unit ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Unit Id",
                            "description": "The unit ID"
                        },
                        "name": "unit_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitV2"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/initiate/{workflow_id}": {
            "post": {
                "tags": [
                    "Workflows"
                ],
                "summary": "Initiate Workflow",
                "operationId": "initiate_workflow_v1_workflows_initiate__workflow_id__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workflow Id"
                        },
                        "name": "workflow_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Body"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing API key"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions"
                    },
                    "404": {
                        "description": "Not found - resource doesn't exist"
                    },
                    "409": {
                        "description": "Conflict - duplicate resource"
                    },
                    "422": {
                        "description": "Unprocessable entity - validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "501": {
                        "description": "Not implemented"
                    },
                    "503": {
                        "description": "Service unavailable - external service failure"
                    }
                }
            }
        }
    },
    "webhooks": {
        "prospect_event": {
            "post": {
                "summary": "New Prospect Event",
                "description": "Whenever we receive information about a prospect, we will post it back to your registered webhook.\n\nWebhooks can be registered at the organization level or the property level.\nPlease reach out to the EliseAI support team to register your webhooks.\n\nEvent Types:\n* **ProspectUpdate:** Posted whenever a prospect is created, or additional information is gathered around a prospect\n* **Handoff:** Posted whenever Leasing Agent intervention is required\n* **ProspectEmailEvent:** Posted whenever Elise emails a lead or a lead emails Elise\n* **ProspectTextEvent:** Posted whenever Elise texts a lead or a lead texts Elise\n* **ProspectVoiceAIEvent:** Posted whenever a lead calls VoiceAI\n* **ProspectOptOutEvent:** Posted whenever a lead opts out of medium(s) of communication.\n* **ProspectOptInEvent:** Posted whenever a lead opts into medium(s) of communication.\n* **ProspectInternalNoteEvent:** Posted whenever a lead is added to a conversation as an internal note.\n* **ProspectWebchatEvent:** Posted whenever a lead chats with Elise via webchat.\n* **ProspectStatusChangeEvent:** Posted whenever a prospect status is changed.\n* **ProspectOwnerUpdateEvent:** Posted whenever a prospect owner is changed.",
                "operationId": "new_prospect_eventprospect_event_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProspectWebhookEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "task_event": {
            "post": {
                "summary": "Task Event Webhook",
                "description": "Whenever a task is created or closed (resolved), we will post it back to your registered webhook.\n\nWebhooks can be registered at the organization level or the property level.\nPlease reach out to the EliseAI support team to register your webhooks.\n\nCreation events will include: \n* task_id (str): Elise identifier for the task\n* type (str): one of \"TaskCreated\", \"TaskClosed\"\n* task_type (str): describes the type of task that needs to be done such as \"ReplyNeeded\"\n* event_date (datetime): date and time of the event\n* elise_prospect_id (str): Elise identifier for the prospect\n* elise_conversation_id (str): Elise identifier for the conversation\n* elise_property_id (str): Elise identifier for the property\n\nResolutions will _additionally_ include:\n* resolution_type (str): describes how the task was resolved\n* resolution_user_id (str): Elise identifier for the user who resolved the task\n* resolution_user_email (str): email of the user who resolved the task\n* resolution_user_name (str): name of the user who resolved the task",
                "operationId": "task_event_webhooktask_event_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskWebhookEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "calendar_event": {
            "post": {
                "summary": "Calendar Event Webhook",
                "description": "Whenever a calendar event is created, cancelled, or updated, we will post it back to your registered webhook.\n\nWebhooks can be registered at the organization level or the property level.\nPlease reach out to the EliseAI support team to register your webhooks.\n\nThis is the list of possible update types:\n* **AppointmentScheduled:** Posted whenever a new appointment is scheduled\n* **AppointmentCancelled:** Posted whenever an appointment is cancelled\n* **AppointmentShow:** Posted whenever a prospect shows up for their appointment\n* **AppointmentNoShow:** Posted whenever a prospect doesn't show up for their appointment\n* **AgentUpdated:** Posted whenever the assigned leasing agent for an appointment is changed\n\nCalendar events will include:\n* **event_id:** Unique identifier for the event\n* **type:** The type of event that occurred\n* **event_date:** Date and time of the event\n* **calendar_event_id:** Elise identifier for the calendar event\n* **elise_property_id:** Elise identifier for the property\n* **external_property_id:** External identifier for the property\n* **elise_prospect_id:** Elise identifier for the prospect\n* **external_prospect_id:** External identifier for the prospect\n\nAdditional fields based on the type of event:\n* **AppointmentScheduled:**\n  * **start_time:** The start time of the appointment\n  * **end_time:** The end time of the appointment\n  * **tour_type:** The type of tour\n  * **leasing_agent_email:** The email of the leasing agent\n  * **leasing_agent_app_user_id:** The ID of the leasing agent's app user\n* **AppointmentCancelled:**\n  * **start_time:** The start time of the appointment\n  * **end_time:** The end time of the appointment\n  * **tour_type:** The type of tour\n* **AppointmentShow:**\n  * **show_time:** The time the prospect showed up for their appointment\n  * **start_time:** The start time of the appointment\n  * **end_time:** The end time of the appointment\n  * **tour_type:** The type of tour\n  * **unit_ids:** The IDs of the units that were shown\n  * **unit_numbers:** The numbers of the units that were shown\n* **AppointmentNoShow:**\n  * **no_show_time:** The time the prospect didn't show up for their appointment\n  * **start_time:** The start time of the appointment\n  * **end_time:** The end time of the appointment\n  * **tour_type:** The type of tour\n* **AgentUpdated:**\n  * **old_agent_user_id:** The ID of the old leasing agent\n  * **old_agent_email:** The email of the old leasing agent\n  * **new_agent_user_id:** The ID of the new leasing agent\n  * **new_agent_email:** The email of the new leasing agent\n  * **start_time:** The start time of the appointment\n  * **end_time:** The end time of the appointment\n  * **tour_type:** The type of tour",
                "operationId": "calendar_event_webhookcalendar_event_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalendarWebhookEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://api.eliseai.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "OAuth2": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://meetelise.us.auth0.com/authorize",
                        "tokenUrl": "https://meetelise.us.auth0.com/oauth/token",
                        "scopes": {}
                    }
                }
            },
            "VendorBearer": {
                "type": "http",
                "scheme": "bearer",
                "description": "Vendor API Token"
            }
        },
        "schemas": {
            "EliseReactivatedEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "EliseReactivated",
                        "title": "Type",
                        "default": "EliseReactivated"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date"
                ],
                "title": "EliseReactivatedEvent"
            },
            "Medium": {
                "type": "string",
                "enum": [
                    "EMAIL",
                    "SMS",
                    "VOICE",
                    "CHAT"
                ],
                "title": "Medium",
                "description": "An enumeration."
            },
            "ProspectHandoffEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Handoff",
                        "title": "Type",
                        "default": "Handoff"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "handoff_type": {
                        "type": "string",
                        "title": "Handoff Type"
                    },
                    "handoff_reason": {
                        "type": "string",
                        "title": "Handoff Reason"
                    },
                    "handoff_description": {
                        "type": "string",
                        "title": "Handoff Description"
                    },
                    "handoff_message": {
                        "type": "string",
                        "title": "Handoff Message"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "handoff_type"
                ],
                "title": "ProspectHandoffEvent"
            },
            "TourTypeAvailability": {
                "properties": {
                    "available_tour_start_times": {
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "type": "array",
                        "title": "Available Tour Start Times"
                    },
                    "tour_duration_minutes": {
                        "type": "integer",
                        "title": "Tour Duration Minutes"
                    }
                },
                "type": "object",
                "required": [
                    "available_tour_start_times"
                ],
                "title": "TourTypeAvailability",
                "example": {
                    "available_tour_start_times": [
                        "2024-02-01T09:00:00-08:00",
                        "2024-02-01T10:30:00-08:00",
                        "2024-02-02T09:00:00-08:00",
                        "2024-02-02T10:30:00-08:00"
                    ],
                    "tour_duration_minutes": 30
                }
            },
            "TourType": {
                "type": "string",
                "enum": [
                    "sgt",
                    "guided",
                    "virtual"
                ],
                "title": "TourType",
                "description": "An enumeration."
            },
            "ConversationMedium": {
                "type": "string",
                "enum": [
                    "EMAIL",
                    "SMS",
                    "VOICE"
                ],
                "title": "ConversationMedium",
                "description": "An enumeration."
            },
            "CreateBatchChargesRequest": {
                "properties": {
                    "charges": {
                        "items": {
                            "$ref": "#/components/schemas/BatchChargeItem"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "title": "Charges",
                        "description": "Array of charges to create"
                    },
                    "skip_duplicates": {
                        "type": "boolean",
                        "title": "Skip Duplicates",
                        "description": "Skip charges with existing external_charge_ids instead of failing",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "charges"
                ],
                "title": "CreateBatchChargesRequest",
                "description": "Create multiple charges in a single API call.",
                "example": {
                    "charges": [
                        {
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "amount": 45.5,
                            "charge_code": "WATER",
                            "description": "Water & Sewer - January 2024",
                            "charge_date": "2024-02-01",
                            "external_charge_id": "water_jan24_unit2a"
                        },
                        {
                            "lease_id": "018e2b7e-3c4d-7000-8000-000000000007",
                            "amount": 32.75,
                            "charge_code": "TRASH",
                            "description": "Trash Collection - January 2024",
                            "charge_date": "2024-02-01",
                            "external_charge_id": "trash_jan24_unit3b"
                        }
                    ],
                    "skip_duplicates": true
                }
            },
            "BatchPaymentsResponse": {
                "properties": {
                    "total_requested": {
                        "type": "integer",
                        "title": "Total Requested",
                        "description": "Number of payments in the request"
                    },
                    "total_created": {
                        "type": "integer",
                        "title": "Total Created",
                        "description": "Number of payments successfully created"
                    },
                    "total_skipped": {
                        "type": "integer",
                        "title": "Total Skipped",
                        "description": "Number of payments skipped (duplicates)"
                    },
                    "total_failed": {
                        "type": "integer",
                        "title": "Total Failed",
                        "description": "Number of payments that failed to create"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/BatchPaymentResult"
                        },
                        "type": "array",
                        "title": "Results",
                        "description": "Detailed results for each payment"
                    }
                },
                "type": "object",
                "required": [
                    "total_requested",
                    "total_created",
                    "total_skipped",
                    "total_failed",
                    "results"
                ],
                "title": "BatchPaymentsResponse",
                "description": "Response from batch payment creation.",
                "example": {
                    "total_requested": 2,
                    "total_created": 2,
                    "total_skipped": 0,
                    "total_failed": 0,
                    "results": [
                        {
                            "external_payment_id": "pmt_feb2024_unit2a",
                            "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                            "success": true
                        },
                        {
                            "external_payment_id": "pmt_feb2024_unit3b",
                            "payment_id": "018e2b7e-becf-7000-8000-00000000000f",
                            "success": true
                        }
                    ]
                }
            },
            "PaginationMeta": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "Total number of records matching the query",
                        "example": 156
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit",
                        "description": "Maximum number of records returned in this response",
                        "example": 100
                    },
                    "offset": {
                        "type": "integer",
                        "title": "Offset",
                        "description": "Number of records skipped from the beginning",
                        "example": 0
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "limit",
                    "offset"
                ],
                "title": "PaginationMeta",
                "description": "Pagination metadata for list endpoints.\n\nUse offset and limit to paginate through large result sets. Check total\nto understand the complete dataset size.",
                "example": {
                    "total": 156,
                    "limit": 100,
                    "offset": 0
                }
            },
            "PriceMatrixContent": {
                "properties": {
                    "dateAvailable": {
                        "type": "string",
                        "title": "Dateavailable"
                    },
                    "rent": {
                        "type": "number",
                        "title": "Rent"
                    },
                    "leaseTermLength": {
                        "type": "integer",
                        "title": "Leasetermlength"
                    },
                    "occupancyType": {
                        "type": "string",
                        "title": "Occupancytype"
                    },
                    "endTermDate": {
                        "type": "string",
                        "title": "Endtermdate"
                    },
                    "termName": {
                        "type": "string",
                        "title": "Termname"
                    }
                },
                "type": "object",
                "required": [
                    "dateAvailable",
                    "rent",
                    "leaseTermLength"
                ],
                "title": "PriceMatrixContent"
            },
            "OptInEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "OptIn",
                        "title": "Type",
                        "default": "OptIn"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "mediums": {
                        "items": {
                            "$ref": "#/components/schemas/ConversationMedium"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "mediums"
                ],
                "title": "OptInEvent"
            },
            "RentersInsuranceStatus": {
                "type": "string",
                "enum": [
                    "pending",
                    "active",
                    "expired",
                    "cancelled",
                    "not_required"
                ],
                "title": "RentersInsuranceStatus",
                "description": "Renter's insurance policy status"
            },
            "CalendarAppointmentCancelledEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AppointmentCancelled",
                        "title": "Type",
                        "default": "AppointmentCancelled"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "calendar_event_id": {
                        "type": "integer",
                        "title": "Calendar Event Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "start_time": {
                        "type": "string",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "title": "End Time"
                    },
                    "tour_type": {
                        "type": "string",
                        "title": "Tour Type"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "calendar_event_id",
                    "elise_property_id",
                    "start_time",
                    "end_time",
                    "tour_type"
                ],
                "title": "CalendarAppointmentCancelledEvent"
            },
            "SurveyLinkEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "SurveyLink",
                        "title": "Type",
                        "default": "SurveyLink"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "survey_link": {
                        "type": "string",
                        "title": "Survey Link"
                    },
                    "survey_link_type": {
                        "$ref": "#/components/schemas/SurveyLinkType"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "survey_link",
                    "survey_link_type"
                ],
                "title": "SurveyLinkEvent"
            },
            "OptOutEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "OptOut",
                        "title": "Type",
                        "default": "OptOut"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "mediums": {
                        "items": {
                            "$ref": "#/components/schemas/ConversationMedium"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "mediums"
                ],
                "title": "OptOutEvent"
            },
            "EliseAI__elise_api__model__prospect__ProspectStatus": {
                "type": "string",
                "enum": [
                    "ApplicationStarted",
                    "ApplicationCompleted",
                    "ApplicationApproved",
                    "ApplicationRejected",
                    "ApplicationCanceled",
                    "LeaseStarted",
                    "LeaseApproved",
                    "LeasePartiallyCompleted",
                    "LeaseCompleted"
                ],
                "title": "ProspectStatus",
                "description": "An enumeration."
            },
            "PropertiesResponse": {
                "properties": {
                    "properties": {
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        },
                        "type": "array",
                        "title": "Properties",
                        "description": "Array of property objects"
                    },
                    "pagination": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CursorMeta"
                            }
                        ],
                        "title": "Pagination",
                        "description": "Pagination details for navigating large result sets"
                    }
                },
                "type": "object",
                "required": [
                    "properties",
                    "pagination"
                ],
                "title": "PropertiesResponse",
                "description": "List of properties with pagination metadata.\n\nUsed for listing properties with filtering and pagination support.",
                "example": {
                    "properties": [
                        {
                            "id": "12345",
                            "name": "Sunrise Apartments",
                            "property_type": "multi_family",
                            "status": "active",
                            "address": {
                                "street_address": "123 Main Street",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94105",
                                "country": "US"
                            },
                            "total_units": 250,
                            "external_ids": [
                                {
                                    "source": "YardiVoyager",
                                    "id_type": "property",
                                    "external_id": "12345"
                                }
                            ]
                        }
                    ],
                    "pagination": {
                        "next_cursor": "a3naIad30=",
                        "has_more": true
                    }
                }
            },
            "Pets": {
                "type": "string",
                "enum": [
                    "Cats",
                    "Dogs",
                    "UnknownPetIdentity",
                    "NoPets"
                ],
                "title": "Pets",
                "description": "An enumeration."
            },
            "ProspectWebchatEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Webchat",
                        "title": "Type",
                        "default": "Webchat"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "message",
                    "sender"
                ],
                "title": "ProspectWebchatEvent"
            },
            "WebchatEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Webchat",
                        "title": "Type",
                        "default": "Webchat"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "sender",
                    "message"
                ],
                "title": "WebchatEvent"
            },
            "UpdateAppointmentRequest": {
                "properties": {
                    "tour_type": {
                        "$ref": "#/components/schemas/TourType"
                    },
                    "appointment_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Appointment Time"
                    }
                },
                "type": "object",
                "title": "UpdateAppointmentRequest"
            },
            "ResidentStatus": {
                "type": "string",
                "enum": [
                    "Applicant",
                    "Renewing",
                    "Future",
                    "Resident",
                    "Notice",
                    "Waitlist",
                    "Former",
                    "UnderEviction",
                    "Evicted",
                    "Cancelled",
                    "Collections"
                ],
                "title": "ResidentStatus",
                "description": "An enumeration."
            },
            "EliseAI__prospects__model__types__ProspectStatus": {
                "type": "string",
                "enum": [
                    "Inquiry",
                    "Applicant",
                    "Leased",
                    "Cancelled"
                ],
                "title": "ProspectStatus",
                "description": "An enumeration."
            },
            "CalendarWebhookEvent": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/CalendarAppointmentScheduledEvent"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarAppointmentCancelledEvent"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarAppointmentShowEvent"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarAppointmentNoShowEvent"
                    },
                    {
                        "$ref": "#/components/schemas/CalendarAgentUpdatedEvent"
                    }
                ],
                "title": "CalendarWebhookEvent"
            },
            "LeaseMember": {
                "properties": {
                    "resident": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LeaseResident"
                            }
                        ],
                        "title": "Resident",
                        "description": "Resident information"
                    },
                    "resident_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResidentStatus"
                            }
                        ],
                        "description": "Resident status on this lease",
                        "example": "RESIDENT"
                    },
                    "occupant_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OccupantType"
                            }
                        ],
                        "description": "Occupant type (e.g., PRIMARY, ROOMMATE)",
                        "example": "PRIMARY"
                    },
                    "move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move In Date",
                        "description": "Move-in date",
                        "example": "2024-01-01"
                    },
                    "move_out_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move Out Date",
                        "description": "Move-out date (null if still living there)"
                    },
                    "notice_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Notice Date",
                        "description": "Notice to vacate date"
                    },
                    "renters_insurance": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RentersInsuranceInfo"
                            }
                        ],
                        "title": "Renters Insurance",
                        "description": "Renter's insurance policy information"
                    },
                    "is_current_occupant": {
                        "type": "boolean",
                        "title": "Is Current Occupant",
                        "description": "Whether this resident is currently occupying the unit",
                        "default": false,
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "resident",
                    "resident_status",
                    "occupant_type"
                ],
                "title": "LeaseMember",
                "description": "A lease member represents a resident's association with a specific lease.\n\nContains the resident information and their relationship/status on the lease.",
                "example": {
                    "resident": {
                        "id": "res_12345",
                        "first_name": "Emma",
                        "last_name": "Johnson",
                        "email": "emma.johnson@example.com"
                    },
                    "resident_status": "RESIDENT",
                    "occupant_type": "PRIMARY",
                    "move_in_date": "2024-01-01",
                    "renters_insurance": {
                        "required": true,
                        "provider": "Assurant",
                        "policy_number": "ASR-123456789",
                        "status": "active"
                    },
                    "is_current_occupant": true
                }
            },
            "PropertyStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive"
                ],
                "title": "PropertyStatus",
                "description": "Current operational status of the property"
            },
            "CreateBatchPaymentReversalsRequest": {
                "properties": {
                    "reversals": {
                        "items": {
                            "$ref": "#/components/schemas/BatchPaymentReversalItem"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "title": "Reversals",
                        "description": "Array of payments to reverse"
                    },
                    "skip_duplicates": {
                        "type": "boolean",
                        "title": "Skip Duplicates",
                        "description": "Skip reversals with existing external_reversal_ids instead of failing",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "reversals"
                ],
                "title": "CreateBatchPaymentReversalsRequest",
                "description": "Reverse multiple payments in a single API call.",
                "example": {
                    "reversals": [
                        {
                            "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                            "reason": "NSF",
                            "external_reversal_id": "reversal_pmt_feb2024"
                        }
                    ],
                    "skip_duplicates": true
                }
            },
            "CreateProspectAppointmentRequest": {
                "properties": {
                    "prospect": {
                        "$ref": "#/components/schemas/CreateProspectForAppointmentRequest"
                    },
                    "appointment": {
                        "$ref": "#/components/schemas/AppointmentRequest"
                    },
                    "lead_note": {
                        "type": "string",
                        "title": "Lead Note",
                        "description": "Optional note from the lead about the appointment"
                    }
                },
                "type": "object",
                "required": [
                    "prospect",
                    "appointment"
                ],
                "title": "CreateProspectAppointmentRequest"
            },
            "ProspectVerificationStatus": {
                "type": "string",
                "enum": [
                    "NOT_STARTED",
                    "STARTED",
                    "FAILED",
                    "SUCCESSFUL",
                    "ERROR",
                    "EXPIRED",
                    "CANCELLED",
                    "PENDING_REVIEW"
                ],
                "title": "ProspectVerificationStatus",
                "description": "status of an id verification attempt. Currently, mirroring Plaid's status "
            },
            "RentersInsuranceInfo": {
                "properties": {
                    "required": {
                        "type": "boolean",
                        "title": "Required",
                        "description": "Whether renter's insurance is required for this lease",
                        "example": true
                    },
                    "provider": {
                        "type": "string",
                        "title": "Provider",
                        "description": "Insurance provider name",
                        "example": "Assurant"
                    },
                    "policy_number": {
                        "type": "string",
                        "title": "Policy Number",
                        "description": "Policy number",
                        "example": "ASR-123456789"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RentersInsuranceStatus"
                            }
                        ],
                        "description": "Current policy status",
                        "example": "active"
                    }
                },
                "type": "object",
                "required": [
                    "required",
                    "status"
                ],
                "title": "RentersInsuranceInfo",
                "description": "Renter's insurance policy information",
                "example": {
                    "required": true,
                    "provider": "Assurant",
                    "policy_number": "ASR-123456789",
                    "status": "active"
                }
            },
            "VirtualTourLinksRequest": {
                "properties": {
                    "virtual_tour_links": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Virtual Tour Links"
                    }
                },
                "type": "object",
                "required": [
                    "virtual_tour_links"
                ],
                "title": "VirtualTourLinksRequest",
                "description": "Request body for updating virtual tour links for multiple units",
                "example": {
                    "virtual_tour_links": {
                        "123": "https://example.com/virtual-tour-123",
                        "456": "https://example.com/virtual-tour-456"
                    }
                }
            },
            "Responsibility": {
                "type": "string",
                "enum": [
                    "Leasing",
                    "Maintenance",
                    "Billing",
                    "Renewals",
                    "EmergencyMaintenance",
                    "Lockouts",
                    "SafetyAndSecurity",
                    "Concierge"
                ],
                "title": "Responsibility",
                "description": "An enumeration."
            },
            "BatchChargeItem": {
                "properties": {
                    "lease_id": {
                        "type": "string",
                        "title": "Lease Id",
                        "description": "The lease to charge",
                        "example": "018e2b7d-6a5d-7000-8000-000000000002"
                    },
                    "account_id": {
                        "type": "string",
                        "title": "Account Id",
                        "description": "The account ID (will be auto-populated from lease_id if not provided)"
                    },
                    "amount": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Amount",
                        "description": "Charge amount",
                        "example": 45.5
                    },
                    "charge_code": {
                        "type": "string",
                        "title": "Charge Code",
                        "description": "Charge code for categorization (charge type will be automatically determined)",
                        "example": "WATER"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description",
                        "example": "Water & Sewer - January 2024"
                    },
                    "charge_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Charge Date",
                        "description": "Effective date of the charge (used to calculate due date)",
                        "example": "2024-02-01"
                    },
                    "external_charge_id": {
                        "type": "string",
                        "title": "External Charge Id",
                        "description": "Your unique ID for idempotency",
                        "example": "water_jan24_unit2a"
                    }
                },
                "type": "object",
                "required": [
                    "lease_id",
                    "amount",
                    "charge_code",
                    "description",
                    "charge_date",
                    "external_charge_id"
                ],
                "title": "BatchChargeItem",
                "description": "Individual charge item for batch creation.",
                "example": {
                    "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                    "amount": 45.5,
                    "charge_code": "WATER",
                    "description": "Water & Sewer - January 2024",
                    "charge_date": "2024-02-01",
                    "external_charge_id": "water_jan24_unit2a"
                }
            },
            "VoiceEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Voice",
                        "title": "Type",
                        "default": "Voice"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    },
                    "summary": {
                        "type": "string",
                        "title": "Summary"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "sender",
                    "summary"
                ],
                "title": "VoiceEvent"
            },
            "CalendarAppointmentNoShowEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AppointmentNoShow",
                        "title": "Type",
                        "default": "AppointmentNoShow"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "calendar_event_id": {
                        "type": "integer",
                        "title": "Calendar Event Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "no_show_time": {
                        "type": "string",
                        "title": "No Show Time"
                    },
                    "start_time": {
                        "type": "string",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "title": "End Time"
                    },
                    "tour_type": {
                        "type": "string",
                        "title": "Tour Type"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "calendar_event_id",
                    "elise_property_id",
                    "no_show_time",
                    "start_time",
                    "end_time",
                    "tour_type"
                ],
                "title": "CalendarAppointmentNoShowEvent"
            },
            "CreateProspectForAppointmentRequest": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Valid email address",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "Phone number in E.164 format (e.g. +12025550179)",
                        "example": "+12025550179"
                    },
                    "move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move In Date"
                    },
                    "bedrooms": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Bedrooms",
                        "description": "Number of bedrooms prospect is interested in",
                        "example": 2
                    },
                    "bathrooms": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Bathrooms",
                        "description": "Number of bathrooms prospect is interested in",
                        "example": 2
                    },
                    "minimum_budget": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Minimum Budget",
                        "description": "Minimum monthly rent budget in USD",
                        "example": 1500
                    },
                    "maximum_budget": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Maximum Budget",
                        "description": "Maximum monthly rent budget in USD",
                        "example": 2500
                    },
                    "min_lease_length": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Min Lease Length",
                        "description": "Minimum desired lease term in months",
                        "example": 12
                    },
                    "max_lease_length": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Max Lease Length",
                        "description": "Maximum desired lease term in months",
                        "example": 18
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id",
                        "description": "External vendor prospect IDIf provided, subsequent webhook events will include this ID.Vendor source is attributed to ID from API credentials",
                        "example": "etS123456"
                    },
                    "vendor_source": {
                        "type": "string",
                        "title": "Vendor Source",
                        "description": "Vendor prospect id source.Field can only be set by internal EliseApi user, otherwise it is inferred through API credentials"
                    },
                    "property_id": {
                        "type": "string",
                        "title": "Property Id"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source"
                    }
                },
                "type": "object",
                "required": [
                    "property_id",
                    "source"
                ],
                "title": "CreateProspectForAppointmentRequest"
            },
            "AppointmentEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Appointment",
                        "title": "Type",
                        "default": "Appointment"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "tour_type": {
                        "$ref": "#/components/schemas/TourType"
                    },
                    "appointment_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Appointment Time"
                    },
                    "appointment_id": {
                        "type": "string",
                        "title": "Appointment Id"
                    },
                    "is_full_day": {
                        "type": "boolean",
                        "title": "Is Full Day",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "tour_type",
                    "appointment_time",
                    "appointment_id"
                ],
                "title": "AppointmentEvent"
            },
            "UnitV2": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the unit"
                    },
                    "property_id": {
                        "type": "string",
                        "title": "Property Id",
                        "description": "ID of the property this unit belongs to"
                    },
                    "unit_number": {
                        "type": "string",
                        "title": "Unit Number",
                        "description": "Unit number for display and mail delivery"
                    },
                    "unit_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UnitType"
                            }
                        ],
                        "description": "Classification of the unit",
                        "default": "residential"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UnitStatus"
                            }
                        ],
                        "description": "Current occupancy status"
                    },
                    "bedrooms": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Bedrooms",
                        "description": "Number of bedrooms"
                    },
                    "bathrooms": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Bathrooms",
                        "description": "Number of bathrooms"
                    },
                    "square_feet": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Square Feet",
                        "description": "Unit square footage"
                    },
                    "floor": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Floor",
                        "description": "Floor number (ground floor = 1)"
                    },
                    "building": {
                        "type": "string",
                        "title": "Building",
                        "description": "Building name or identifier"
                    },
                    "floor_plan": {
                        "type": "string",
                        "title": "Floor Plan",
                        "description": "Name of the floor plan"
                    },
                    "market_rent": {
                        "type": "number",
                        "title": "Market Rent",
                        "description": "Market rent amount"
                    },
                    "available_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Available Date",
                        "description": "Date unit becomes available"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this unit was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "When this unit was last modified"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "property_id",
                    "unit_number",
                    "status",
                    "bedrooms",
                    "bathrooms",
                    "created_at",
                    "updated_at"
                ],
                "title": "UnitV2",
                "description": "A unit represents a rentable space within a property.\n\nSimplified model focused on core unit characteristics and status."
            },
            "IdVerificationProvider": {
                "type": "string",
                "enum": [
                    "prospect"
                ],
                "title": "IdVerificationProvider",
                "description": "An enumeration."
            },
            "NoShowEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "NoShow",
                        "title": "Type",
                        "default": "NoShow"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "appointment_id": {
                        "type": "string",
                        "title": "Appointment Id"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "appointment_id"
                ],
                "title": "NoShowEvent"
            },
            "ChargeType": {
                "type": "string",
                "enum": [
                    "RENT",
                    "UTILITIES",
                    "LATE_FEE",
                    "MAINTENANCE",
                    "PARKING",
                    "PET_FEE",
                    "AMENITY",
                    "OTHER"
                ],
                "title": "ChargeType",
                "description": "An enumeration."
            },
            "Property": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the property",
                        "example": "12345"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Property name for display",
                        "example": "Sunrise Apartments"
                    },
                    "property_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PropertyType"
                            }
                        ],
                        "description": "Classification of the property"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PropertyStatus"
                            }
                        ],
                        "description": "Current operational status"
                    },
                    "address": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "title": "Address",
                        "description": "Physical location of the property"
                    },
                    "total_units": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Total Units",
                        "description": "Total number of units in the property",
                        "example": 250
                    },
                    "external_ids": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalId"
                        },
                        "type": "array",
                        "title": "External Ids",
                        "description": "List of external system identifiers for this property"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id",
                        "description": "Organization ID for the property. Denotes who manages the property",
                        "example": "6789"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "property_type",
                    "status",
                    "address"
                ],
                "title": "Property",
                "description": "A property represents a building or complex with residential units.\n\nThis is the top-level entity that contains units, has leases, and\nmanages resident relationships. All financial transactions and \noperational activities are associated with a property.",
                "example": {
                    "id": "12345",
                    "name": "Sunrise Apartments",
                    "property_type": "multi_family",
                    "status": "active",
                    "address": {
                        "street_address": "123 Main Street",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94105",
                        "country": "US"
                    },
                    "total_units": 250,
                    "external_ids": [
                        {
                            "source": "YardiVoyager",
                            "id_type": "property",
                            "external_id": "12345"
                        }
                    ],
                    "organization_id": "6789"
                }
            },
            "UnitStatus": {
                "type": "string",
                "enum": [
                    "vacant",
                    "occupied",
                    "other"
                ],
                "title": "UnitStatus",
                "description": "Current status of a unit"
            },
            "BatchChargesResponse": {
                "properties": {
                    "total_requested": {
                        "type": "integer",
                        "title": "Total Requested",
                        "description": "Number of charges in the request"
                    },
                    "total_created": {
                        "type": "integer",
                        "title": "Total Created",
                        "description": "Number of charges successfully created"
                    },
                    "total_skipped": {
                        "type": "integer",
                        "title": "Total Skipped",
                        "description": "Number of charges skipped (duplicates)"
                    },
                    "total_failed": {
                        "type": "integer",
                        "title": "Total Failed",
                        "description": "Number of charges that failed to create"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/BatchChargeResult"
                        },
                        "type": "array",
                        "title": "Results",
                        "description": "Detailed results for each charge"
                    }
                },
                "type": "object",
                "required": [
                    "total_requested",
                    "total_created",
                    "total_skipped",
                    "total_failed",
                    "results"
                ],
                "title": "BatchChargesResponse",
                "description": "Response from batch charge creation.",
                "example": {
                    "total_requested": 2,
                    "total_created": 2,
                    "total_skipped": 0,
                    "total_failed": 0,
                    "results": [
                        {
                            "external_charge_id": "water_jan24_unit2a",
                            "charge_id": "018e2b7e-4d5e-7000-8000-000000000008",
                            "success": true
                        },
                        {
                            "external_charge_id": "trash_jan24_unit3b",
                            "charge_id": "018e2b7e-5e6f-7000-8000-000000000009",
                            "success": true
                        }
                    ]
                }
            },
            "EmailEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Email",
                        "title": "Type",
                        "default": "Email"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    },
                    "subject": {
                        "type": "string",
                        "title": "Subject"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "sender",
                    "subject",
                    "message"
                ],
                "title": "EmailEvent"
            },
            "CreateProspectRequest": {
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Valid email address",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "Phone number in E.164 format (e.g. +12025550179)",
                        "example": "+12025550179"
                    },
                    "move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move In Date"
                    },
                    "bedrooms": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Bedrooms",
                        "description": "Number of bedrooms prospect is interested in",
                        "example": 2
                    },
                    "bathrooms": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Bathrooms",
                        "description": "Number of bathrooms prospect is interested in",
                        "example": 2
                    },
                    "minimum_budget": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Minimum Budget",
                        "description": "Minimum monthly rent budget in USD",
                        "example": 1500
                    },
                    "maximum_budget": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Maximum Budget",
                        "description": "Maximum monthly rent budget in USD",
                        "example": 2500
                    },
                    "min_lease_length": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Min Lease Length",
                        "description": "Minimum desired lease term in months",
                        "example": 12
                    },
                    "max_lease_length": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Max Lease Length",
                        "description": "Maximum desired lease term in months",
                        "example": 18
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id",
                        "description": "External vendor prospect IDIf provided, subsequent webhook events will include this ID.Vendor source is attributed to ID from API credentials",
                        "example": "etS123456"
                    },
                    "vendor_source": {
                        "type": "string",
                        "title": "Vendor Source",
                        "description": "Vendor prospect id source.Field can only be set by internal EliseApi user, otherwise it is inferred through API credentials"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id",
                        "description": "Unique identifier for the prospect in Elise's system.",
                        "example": "c21b94e2-0280-415d-9d1e-091b547a0061"
                    },
                    "property_id": {
                        "type": "string",
                        "title": "Property Id",
                        "description": "Unique identifier for the property in Elise's system. Required for vendors",
                        "example": "c21b94e2-0280-415d-9d1e-091b547a0061"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "The source or channel through which the prospect was acquired. Required for all, but pass-through for PMS and third-party property management companies.",
                        "example": "Zillow"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id",
                        "description": "External prospect ID from property management system. Only allowed when request is sent from a PMS or third-party property management company. If provided, subsequent webhook events will include this ID.",
                        "example": "PMS123456"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id",
                        "description": "External property ID from property management system. Only allowed when request is sent from a PMS or third-party property management company.",
                        "example": "property123"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "[DEPRECATED] Current status of the prospect in the application/leasing process. This should be updated by passing Status events.",
                        "example": "ApplicationStarted"
                    },
                    "events": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array",
                        "title": "Events",
                        "description": "List of events (appointments, notes, communications etc.) associated with this prospect creation"
                    }
                },
                "type": "object",
                "title": "CreateProspectRequest"
            },
            "StatusUpdatedEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "StatusUpdated",
                        "title": "Type",
                        "default": "StatusUpdated"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EliseAI__elise_api__model__prospect__ProspectStatus"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "status"
                ],
                "title": "StatusUpdatedEvent"
            },
            "TaskWebhookEvent": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaskEventType"
                    },
                    "task_type": {
                        "type": "string",
                        "title": "Task Type"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "elise_conversation_id": {
                        "type": "string",
                        "title": "Elise Conversation Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "elise_resident_id": {
                        "type": "string",
                        "title": "Elise Resident Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "external_resident_id": {
                        "type": "string",
                        "title": "External Resident Id"
                    },
                    "external_lease_id": {
                        "type": "string",
                        "title": "External Lease Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "resolution_type": {
                        "type": "string",
                        "title": "Resolution Type"
                    },
                    "resolution_user_id": {
                        "type": "string",
                        "title": "Resolution User Id"
                    },
                    "resolution_user_email": {
                        "type": "string",
                        "title": "Resolution User Email"
                    },
                    "resolution_user_name": {
                        "type": "string",
                        "title": "Resolution User Name"
                    },
                    "domain": {
                        "type": "string",
                        "title": "Domain"
                    }
                },
                "type": "object",
                "required": [
                    "task_id",
                    "type",
                    "task_type",
                    "event_date",
                    "elise_property_id"
                ],
                "title": "TaskWebhookEvent"
            },
            "CalendarAppointmentShowEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AppointmentShow",
                        "title": "Type",
                        "default": "AppointmentShow"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "calendar_event_id": {
                        "type": "integer",
                        "title": "Calendar Event Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "show_time": {
                        "type": "string",
                        "title": "Show Time"
                    },
                    "start_time": {
                        "type": "string",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "title": "End Time"
                    },
                    "tour_type": {
                        "type": "string",
                        "title": "Tour Type"
                    },
                    "unit_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Unit Ids"
                    },
                    "unit_numbers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Unit Numbers"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "calendar_event_id",
                    "elise_property_id",
                    "show_time",
                    "start_time",
                    "end_time",
                    "tour_type"
                ],
                "title": "CalendarAppointmentShowEvent"
            },
            "BatchReversalsResponse": {
                "properties": {
                    "total_requested": {
                        "type": "integer",
                        "title": "Total Requested",
                        "description": "Number of reversals in the request"
                    },
                    "total_processed": {
                        "type": "integer",
                        "title": "Total Processed",
                        "description": "Number of reversals successfully processed"
                    },
                    "total_skipped": {
                        "type": "integer",
                        "title": "Total Skipped",
                        "description": "Number of reversals skipped (duplicates)"
                    },
                    "total_failed": {
                        "type": "integer",
                        "title": "Total Failed",
                        "description": "Number of reversals that failed to process"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/BatchReversalResult"
                        },
                        "type": "array",
                        "title": "Results",
                        "description": "Detailed results for each reversal"
                    }
                },
                "type": "object",
                "required": [
                    "total_requested",
                    "total_processed",
                    "total_skipped",
                    "total_failed",
                    "results"
                ],
                "title": "BatchReversalsResponse",
                "description": "Response from batch charge reversal.",
                "example": {
                    "total_requested": 2,
                    "total_processed": 2,
                    "total_skipped": 0,
                    "total_failed": 0,
                    "results": [
                        {
                            "external_charge_id": "water_jan24_unit2a",
                            "external_reversal_id": "reversal_water_jan24_unit2a",
                            "adjustment_id": "018e2b7e-7a8b-7000-8000-00000000000b",
                            "success": true
                        },
                        {
                            "external_charge_id": "trash_jan24_unit3b",
                            "external_reversal_id": "reversal_trash_jan24_unit3b",
                            "adjustment_id": "018e2b7e-8b9c-7000-8000-00000000000c",
                            "success": true
                        }
                    ]
                }
            },
            "LeadNoteEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "LeadNote",
                        "title": "Type",
                        "default": "LeadNote"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "note": {
                        "type": "string",
                        "title": "Note"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "note"
                ],
                "title": "LeadNoteEvent"
            },
            "PropertyLeadSource": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source"
                    },
                    "property_id": {
                        "type": "string",
                        "title": "Property Id"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "time_inactivated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Time Inactivated"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "source",
                    "property_id",
                    "active"
                ],
                "title": "PropertyLeadSource",
                "example": {
                    "id": "123",
                    "source": "Apartments.com",
                    "property_id": "247389",
                    "active": true
                }
            },
            "PaymentMethod": {
                "type": "string",
                "enum": [
                    "ACH",
                    "CHECK",
                    "OTHER"
                ],
                "title": "PaymentMethod",
                "description": "An enumeration."
            },
            "EliseProspect": {
                "properties": {
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EliseAI__prospects__model__types__ProspectStatus"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "preferred_layouts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Preferred Layouts"
                    },
                    "preferred_units": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Preferred Units"
                    },
                    "primary_lead_source": {
                        "type": "string",
                        "title": "Primary Lead Source"
                    },
                    "from_move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "From Move In Date"
                    },
                    "to_move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "To Move In Date"
                    },
                    "min_lease_length": {
                        "type": "integer",
                        "title": "Min Lease Length"
                    },
                    "max_lease_length": {
                        "type": "integer",
                        "title": "Max Lease Length"
                    },
                    "min_budget": {
                        "type": "integer",
                        "title": "Min Budget"
                    },
                    "max_budget": {
                        "type": "integer",
                        "title": "Max Budget"
                    },
                    "pets": {
                        "items": {
                            "$ref": "#/components/schemas/Pets"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "elise_prospect_id",
                    "elise_property_id"
                ],
                "title": "EliseProspect"
            },
            "LeaseWithMembers": {
                "properties": {
                    "lease": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Lease"
                            }
                        ],
                        "title": "Lease",
                        "description": "Lease information"
                    },
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/LeaseMember"
                        },
                        "type": "array",
                        "title": "Members",
                        "description": "All members/residents on this lease"
                    }
                },
                "type": "object",
                "required": [
                    "lease"
                ],
                "title": "LeaseWithMembers",
                "description": "Enhanced lease information including all members/residents.\n\nProvides a complete view of a lease with basic lease details and\nall associated residents without requiring separate API calls.",
                "example": {
                    "lease": {
                        "id": "lease_12345",
                        "unit_id": "u_12345",
                        "unit_number": "2A",
                        "status": "Current",
                        "lease_type": "standard",
                        "rent_amount": 1250.0,
                        "is_month_to_month": false,
                        "lease_term": {
                            "start_date": "2024-01-01",
                            "end_date": "2024-12-31",
                            "signed_date": "2023-12-15"
                        }
                    },
                    "members": [
                        {
                            "resident": {
                                "id": "res_12345",
                                "first_name": "Emma",
                                "last_name": "Johnson",
                                "email": "emma.johnson@example.com"
                            },
                            "resident_status": "RESIDENT",
                            "occupant_type": "PRIMARY",
                            "move_in_date": "2024-01-01"
                        }
                    ]
                }
            },
            "VendorChatSender": {
                "type": "string",
                "enum": [
                    "lead",
                    "agent"
                ],
                "title": "VendorChatSender",
                "description": "An enumeration."
            },
            "LeaseResident": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Resident identifier with 'res_' prefix",
                        "example": "res_12345"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "First name",
                        "example": "Emma"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "Last name",
                        "example": "Johnson"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Email address",
                        "example": "emma.johnson@example.com"
                    },
                    "phone_numbers": {
                        "items": {
                            "$ref": "#/components/schemas/ResidentPhoneNumber"
                        },
                        "type": "array",
                        "title": "Phone Numbers",
                        "description": "List of resident's phone numbers"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "first_name",
                    "last_name"
                ],
                "title": "LeaseResident",
                "description": "Minimal resident information for a lease member.\n\nRepresents a person associated with a lease, without full contact details.",
                "example": {
                    "id": "res_12345",
                    "first_name": "Emma",
                    "last_name": "Johnson",
                    "email": "emma.johnson@example.com",
                    "phone_numbers": [
                        {
                            "type": "HOME",
                            "phone_number": "+14155552671"
                        }
                    ]
                }
            },
            "Address": {
                "properties": {
                    "street_address": {
                        "type": "string",
                        "title": "Street Address",
                        "description": "Street number and name",
                        "example": "123 Main Street"
                    },
                    "unit_number": {
                        "type": "string",
                        "title": "Unit Number",
                        "description": "Unit/suite/apartment number if applicable",
                        "example": "Suite 100"
                    },
                    "city": {
                        "type": "string",
                        "title": "City",
                        "description": "City name",
                        "example": "San Francisco"
                    },
                    "state": {
                        "type": "string",
                        "title": "State",
                        "description": "State or province code",
                        "example": "CA"
                    },
                    "postal_code": {
                        "type": "string",
                        "title": "Postal Code",
                        "description": "ZIP or postal code",
                        "example": "94105"
                    },
                    "country": {
                        "type": "string",
                        "title": "Country",
                        "description": "ISO 3166-1 alpha-2 country code",
                        "default": "US",
                        "example": "US"
                    }
                },
                "type": "object",
                "required": [
                    "street_address",
                    "city",
                    "state",
                    "postal_code"
                ],
                "title": "Address",
                "description": "Physical address for a property.\n\nStructured address components support accurate geocoding and \nutility provider matching for billing integrations.",
                "example": {
                    "street_address": "123 Main Street",
                    "city": "San Francisco",
                    "state": "CA",
                    "postal_code": "94105",
                    "country": "US"
                }
            },
            "TransactionType": {
                "type": "string",
                "enum": [
                    "CHARGE",
                    "PAYMENT",
                    "ADJUSTMENT",
                    "REVERSAL"
                ],
                "title": "TransactionType",
                "description": "An enumeration."
            },
            "CollectionsInfo": {
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionsStatus"
                            }
                        ],
                        "description": "Current collections status"
                    },
                    "status_changed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Status Changed At",
                        "description": "When the collections status last changed"
                    },
                    "reason": {
                        "type": "string",
                        "maxLength": 1000,
                        "title": "Reason",
                        "description": "Reason the lease went to collections"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "CollectionsInfo",
                "description": "Collections status information for a lease.",
                "example": {
                    "status": "IN_COLLECTIONS",
                    "status_changed_at": "2024-01-15T10:30:00Z",
                    "reason": "Outstanding balance over 60 days past due"
                }
            },
            "ExternalPayment": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Internal payment ID"
                    },
                    "org_id": {
                        "type": "integer",
                        "title": "Org Id",
                        "description": "Organization ID"
                    },
                    "entity_id": {
                        "type": "string",
                        "title": "Entity Id",
                        "description": "Entity ID"
                    },
                    "lease_id": {
                        "type": "string",
                        "title": "Lease Id",
                        "description": "Lease ID"
                    },
                    "amount": {
                        "type": "number",
                        "title": "Amount",
                        "description": "Payment amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "description": "Payment currency",
                        "default": "USD"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Payment status (PENDING, CONFIRMED, FAILED, REVERSED)"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Payment Date",
                        "description": "Date payment was received"
                    },
                    "payment_method": {
                        "type": "string",
                        "title": "Payment Method",
                        "description": "Payment method"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Payment description"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional metadata"
                    },
                    "external_payment_id": {
                        "type": "string",
                        "title": "External Payment Id",
                        "description": "External provider's payment ID"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "title": "Updated At",
                        "description": "Last update timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "org_id",
                    "entity_id",
                    "lease_id",
                    "amount",
                    "status",
                    "payment_date",
                    "external_payment_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "ExternalPayment",
                "description": "Payment details response for external provider queries",
                "example": {
                    "id": "018e2b7e-adbe-7000-8000-00000000000e",
                    "org_id": 1234,
                    "entity_id": "018e2b7e-becf-7000-8000-00000000000f",
                    "lease_id": "018e2b7f-cde0-7000-8000-000000000010",
                    "amount": 1500.0,
                    "currency": "USD",
                    "status": "CONFIRMED",
                    "payment_date": "2024-01-15",
                    "payment_method": "ACH",
                    "description": "January 2024 Rent",
                    "external_payment_id": "pmt_jan2024_unit5c",
                    "created_at": "2024-01-15T10:30:00Z",
                    "updated_at": "2024-01-15T10:30:00Z"
                }
            },
            "PhoneNumber": {
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberType"
                            }
                        ],
                        "description": "The type of phone number"
                    },
                    "number": {
                        "type": "string",
                        "pattern": "^\\+[1-9]\\d{1,14}$",
                        "title": "Number",
                        "description": "Phone number in E.164 format",
                        "example": "+14155552671"
                    },
                    "is_primary": {
                        "type": "boolean",
                        "title": "Is Primary",
                        "description": "Whether this is the primary contact number",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "number"
                ],
                "title": "PhoneNumber",
                "description": "A resident's phone number with type classification",
                "example": {
                    "type": "CELL",
                    "number": "+14155552671",
                    "is_primary": true
                }
            },
            "BatchPaymentItem": {
                "properties": {
                    "lease_id": {
                        "type": "string",
                        "title": "Lease Id",
                        "description": "The lease to apply payment to",
                        "example": "018e2b7d-6a5d-7000-8000-000000000002"
                    },
                    "account_id": {
                        "type": "string",
                        "title": "Account Id",
                        "description": "The account ID (will be auto-populated from lease_id if not provided)"
                    },
                    "amount": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Amount",
                        "description": "Payment amount",
                        "example": 1250.0
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Payment Date",
                        "description": "Date payment was received",
                        "example": "2024-02-15"
                    },
                    "payment_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethod"
                            }
                        ],
                        "description": "How the payment was made"
                    },
                    "external_payment_id": {
                        "type": "string",
                        "title": "External Payment Id",
                        "description": "Your unique ID for idempotency",
                        "example": "pmt_feb2024_unit2a"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Payment description",
                        "example": "February 2024 rent"
                    }
                },
                "type": "object",
                "required": [
                    "lease_id",
                    "amount",
                    "payment_date",
                    "external_payment_id",
                    "description"
                ],
                "title": "BatchPaymentItem",
                "description": "Individual payment in a batch.",
                "example": {
                    "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                    "amount": 1250.0,
                    "payment_date": "2024-02-15",
                    "payment_method": "ACH",
                    "external_payment_id": "pmt_feb2024_unit2a",
                    "description": "February 2024 rent"
                }
            },
            "CreateProspectAppointmentResponse": {
                "properties": {
                    "prospect": {
                        "$ref": "#/components/schemas/CreateProspectResponse"
                    },
                    "appointment": {
                        "$ref": "#/components/schemas/AppointmentResponse"
                    }
                },
                "type": "object",
                "required": [
                    "prospect",
                    "appointment"
                ],
                "title": "CreateProspectAppointmentResponse"
            },
            "PriceMatrix": {
                "properties": {
                    "prices": {
                        "items": {
                            "$ref": "#/components/schemas/PriceMatrixContent"
                        },
                        "type": "array",
                        "title": "Prices"
                    }
                },
                "type": "object",
                "required": [
                    "prices"
                ],
                "title": "PriceMatrix"
            },
            "LeaseTerm": {
                "properties": {
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Start Date",
                        "description": "When the lease period begins",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "title": "End Date",
                        "description": "When the lease period ends (null for month-to-month)",
                        "example": "2024-12-31"
                    }
                },
                "type": "object",
                "required": [
                    "start_date"
                ],
                "title": "LeaseTerm",
                "description": "Lease term dates",
                "example": {
                    "start_date": "2024-01-01",
                    "end_date": "2024-12-31"
                }
            },
            "BatchPaymentResult": {
                "properties": {
                    "external_payment_id": {
                        "type": "string",
                        "title": "External Payment Id",
                        "description": "The external ID provided in the request"
                    },
                    "payment_id": {
                        "type": "string",
                        "title": "Payment Id",
                        "description": "ID of the created payment if successful"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether this payment was created successfully"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Error message if creation failed"
                    }
                },
                "type": "object",
                "required": [
                    "external_payment_id",
                    "success"
                ],
                "title": "BatchPaymentResult",
                "description": "Result of a single payment creation in a batch.",
                "example": {
                    "external_payment_id": "pmt_feb2024_unit2a",
                    "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                    "success": true
                }
            },
            "UnitsResponse": {
                "properties": {
                    "units": {
                        "items": {
                            "$ref": "#/components/schemas/UnitV2"
                        },
                        "type": "array",
                        "title": "Units",
                        "description": "Array of unit objects"
                    },
                    "pagination": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaginationMeta"
                            }
                        ],
                        "title": "Pagination",
                        "description": "Pagination details for navigating large result sets"
                    }
                },
                "type": "object",
                "required": [
                    "units",
                    "pagination"
                ],
                "title": "UnitsResponse",
                "description": "List of units with pagination metadata."
            },
            "ProspectOptOutEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "OptOut",
                        "title": "Type",
                        "default": "OptOut"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "mediums": {
                        "items": {
                            "$ref": "#/components/schemas/Medium"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "mediums"
                ],
                "title": "ProspectOptOutEvent"
            },
            "Event": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/AppointmentEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ShowEvent"
                    },
                    {
                        "$ref": "#/components/schemas/NoShowEvent"
                    },
                    {
                        "$ref": "#/components/schemas/AppointmentCanceledEvent"
                    },
                    {
                        "$ref": "#/components/schemas/LeadNoteEvent"
                    },
                    {
                        "$ref": "#/components/schemas/EmailEvent"
                    },
                    {
                        "$ref": "#/components/schemas/SmsEvent"
                    },
                    {
                        "$ref": "#/components/schemas/VoiceEvent"
                    },
                    {
                        "$ref": "#/components/schemas/StatusUpdatedEvent"
                    },
                    {
                        "$ref": "#/components/schemas/AgentTakeoverEvent"
                    },
                    {
                        "$ref": "#/components/schemas/EliseReactivatedEvent"
                    },
                    {
                        "$ref": "#/components/schemas/OptOutEvent"
                    },
                    {
                        "$ref": "#/components/schemas/OptInEvent"
                    },
                    {
                        "$ref": "#/components/schemas/WebchatEvent"
                    },
                    {
                        "$ref": "#/components/schemas/SurveyLinkEvent"
                    },
                    {
                        "$ref": "#/components/schemas/IdVerificationStatusEvent"
                    }
                ],
                "title": "Event",
                "description": "Note: Additional event types or fields may be added"
            },
            "ShowEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Show",
                        "title": "Type",
                        "default": "Show"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "appointment_id": {
                        "type": "string",
                        "title": "Appointment Id"
                    },
                    "access_code": {
                        "type": "string",
                        "title": "Access Code"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date"
                ],
                "title": "ShowEvent"
            },
            "UnitType": {
                "type": "string",
                "enum": [
                    "residential",
                    "other"
                ],
                "title": "UnitType",
                "description": "Types of units available"
            },
            "BatchReversalItem": {
                "properties": {
                    "external_charge_id": {
                        "type": "string",
                        "title": "External Charge Id",
                        "description": "External charge ID to reverse",
                        "example": "water_jan24_unit2a"
                    },
                    "reason": {
                        "type": "string",
                        "maxLength": 1000,
                        "minLength": 1,
                        "title": "Reason",
                        "description": "Business reason for the reversal",
                        "example": "Duplicate charge posted in error"
                    },
                    "external_reversal_id": {
                        "type": "string",
                        "title": "External Reversal Id",
                        "description": "Your unique ID for idempotency",
                        "example": "reversal_water_jan24_unit2a"
                    }
                },
                "type": "object",
                "required": [
                    "external_charge_id",
                    "reason"
                ],
                "title": "BatchReversalItem",
                "description": "Individual charge reversal item for batch processing.",
                "example": {
                    "external_charge_id": "water_jan24_unit2a",
                    "reason": "Duplicate charge posted in error",
                    "external_reversal_id": "reversal_water_jan24_unit2a"
                }
            },
            "LeasesWithMembersResponse": {
                "properties": {
                    "leases": {
                        "items": {
                            "$ref": "#/components/schemas/LeaseWithMembers"
                        },
                        "type": "array",
                        "title": "Leases",
                        "description": "Array of lease objects with their members"
                    },
                    "pagination": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaginationMeta"
                            }
                        ],
                        "title": "Pagination",
                        "description": "Pagination details for navigating large result sets"
                    }
                },
                "type": "object",
                "required": [
                    "leases",
                    "pagination"
                ],
                "title": "LeasesWithMembersResponse",
                "description": "List of leases with members and pagination metadata",
                "example": {
                    "leases": [
                        {
                            "lease": {
                                "id": "lease_12345",
                                "unit_id": "u_12345",
                                "unit_number": "2A",
                                "status": "Current",
                                "lease_type": "standard",
                                "is_month_to_month": false,
                                "lease_term": {
                                    "start_date": "2024-01-01",
                                    "end_date": "2024-12-31"
                                }
                            },
                            "members": [
                                {
                                    "resident": {
                                        "id": "res_12345",
                                        "first_name": "Emma",
                                        "last_name": "Johnson",
                                        "email": "emma.johnson@example.com"
                                    },
                                    "resident_status": "RESIDENT",
                                    "occupant_type": "PRIMARY",
                                    "move_in_date": "2024-01-01"
                                }
                            ]
                        }
                    ],
                    "pagination": {
                        "total": 45,
                        "limit": 100,
                        "offset": 0
                    }
                }
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "TaskEventType": {
                "type": "string",
                "enum": [
                    "TaskCreated",
                    "TaskClosed"
                ],
                "title": "TaskEventType",
                "description": "An enumeration."
            },
            "SmsEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Sms",
                        "title": "Type",
                        "default": "Sms"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "sender",
                    "message"
                ],
                "title": "SmsEvent"
            },
            "ProspectOptInEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "OptIn",
                        "title": "Type",
                        "default": "OptIn"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "mediums": {
                        "items": {
                            "$ref": "#/components/schemas/Medium"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "mediums"
                ],
                "title": "ProspectOptInEvent"
            },
            "ProspectUpdateWebhookEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "ProspectUpdate",
                        "title": "Type",
                        "default": "ProspectUpdate"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "first_name": {
                        "type": "string",
                        "title": "First Name"
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Last Name"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "earliest_move_in": {
                        "type": "string",
                        "format": "date",
                        "title": "Earliest Move In"
                    },
                    "latest_move_in": {
                        "type": "string",
                        "format": "date",
                        "title": "Latest Move In"
                    },
                    "min_lease_length": {
                        "type": "integer",
                        "title": "Min Lease Length"
                    },
                    "max_lease_length": {
                        "type": "integer",
                        "title": "Max Lease Length"
                    },
                    "layout_preference": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Layout Preference",
                        "default": []
                    },
                    "unit_preference": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Unit Preference",
                        "default": []
                    },
                    "lead_sources": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Lead Sources",
                        "default": []
                    },
                    "first_contact_type": {
                        "type": "string",
                        "title": "First Contact Type"
                    },
                    "is_general_property": {
                        "type": "boolean",
                        "title": "Is General Property",
                        "default": false
                    },
                    "is_new_prospect": {
                        "type": "boolean",
                        "title": "Is New Prospect",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id"
                ],
                "title": "ProspectUpdateWebhookEvent"
            },
            "BatchPaymentReversalResult": {
                "properties": {
                    "payment_id": {
                        "type": "string",
                        "title": "Payment Id",
                        "description": "ID of the reversed payment"
                    },
                    "external_reversal_id": {
                        "type": "string",
                        "title": "External Reversal Id",
                        "description": "The external reversal ID if provided"
                    },
                    "reversal_transaction_id": {
                        "type": "string",
                        "title": "Reversal Transaction Id",
                        "description": "ID of the reversal transaction if successful"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether this reversal was processed successfully"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Error message if reversal failed"
                    }
                },
                "type": "object",
                "required": [
                    "payment_id",
                    "success"
                ],
                "title": "BatchPaymentReversalResult",
                "description": "Result of a single payment reversal in a batch.",
                "example": {
                    "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                    "external_reversal_id": "reversal_pmt_feb2024",
                    "reversal_transaction_id": "018e2b7e-9cad-7000-8000-00000000000d",
                    "success": true
                }
            },
            "CursorMeta": {
                "properties": {
                    "next_cursor": {
                        "type": "string",
                        "title": "Next Cursor",
                        "description": "Opaque cursor token for fetching the next page",
                        "example": "eyJpZCI6IjEyMyIsImRhdGUiOiIyMDI0LTAxLTAxVDE0OjIwOjAwWiJ9"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More",
                        "description": "Indicates if more pages are available",
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "has_more"
                ],
                "title": "CursorMeta",
                "description": "Cursor metadata for cursor-based pagination.\n\nUse the cursor token to fetch the next page of results. If null, there are no more pages.",
                "example": {
                    "next_cursor": "eyJpZCI6IjEyMyIsImRhdGUiOiIyMDI0LTAxLTAxVDE0OjIwOjAwWiJ9",
                    "has_more": true
                }
            },
            "Lease": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the lease",
                        "example": "lease_12345"
                    },
                    "unit_id": {
                        "type": "string",
                        "title": "Unit Id",
                        "description": "Internal unit identifier",
                        "example": "u_12345"
                    },
                    "unit_number": {
                        "type": "string",
                        "title": "Unit Number",
                        "description": "Human-readable unit number",
                        "example": "2A"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LeaseStatus"
                            }
                        ],
                        "description": "Current lease status"
                    },
                    "lease_term": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LeaseTerm"
                            }
                        ],
                        "title": "Lease Term",
                        "description": "Lease term dates and details"
                    },
                    "is_month_to_month": {
                        "type": "boolean",
                        "title": "Is Month To Month",
                        "description": "Whether this is a month-to-month lease",
                        "default": false,
                        "example": false
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Deleted At",
                        "description": "When this lease was soft-deleted (null if active)"
                    },
                    "move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move In Date",
                        "description": "Actual move-in date for the lease. If different lease members move in at different dates, this will be the earliest move-in date."
                    },
                    "move_out_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Move Out Date",
                        "description": "Actual move-out date for the lease. If different lease members move out at different dates, this will be the latest move-out date."
                    },
                    "expected_move_in_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Expected Move In Date",
                        "description": "Expected move-in date for the lease. If different lease members are expected to move in at different dates, this will be the earliest expected move-in date."
                    },
                    "expected_move_out_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Expected Move Out Date",
                        "description": "Expected move-out date for the lease. If different lease members are expected to move out at different dates, this will be the latest expected move-out date."
                    },
                    "lease_signed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Lease Signed At",
                        "description": "Date and time when the lease was signed by all lease member parties and counter-signed by all necessary parties at the property manager / owner."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "status",
                    "lease_term"
                ],
                "title": "Lease",
                "description": "A lease represents a rental agreement for a specific unit.\n\nContains lease information tracked in the database.",
                "example": {
                    "id": "lease_12345",
                    "unit_id": "u_12345",
                    "unit_number": "2A",
                    "status": "Current",
                    "is_month_to_month": false,
                    "lease_term": {
                        "start_date": "2024-01-01",
                        "end_date": "2024-12-31"
                    },
                    "move_in_date": "2024-01-01",
                    "expected_move_in_date": "2024-01-01",
                    "expected_move_out_date": "2024-12-31",
                    "lease_signed_at": "2023-12-15T10:30:00Z"
                }
            },
            "ResidentPhoneNumber": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of phone number"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "Phone number in E.164 format",
                        "example": "+14155552671"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "phone_number"
                ],
                "title": "ResidentPhoneNumber",
                "description": "A resident's phone number with type classification"
            },
            "ProspectEmailEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Email",
                        "title": "Type",
                        "default": "Email"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "subject": {
                        "type": "string",
                        "title": "Subject"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "to_addresses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "To Addresses"
                    },
                    "cc_addresses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Cc Addresses"
                    },
                    "from_address": {
                        "type": "string",
                        "title": "From Address"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "subject",
                    "message",
                    "to_addresses",
                    "cc_addresses",
                    "from_address",
                    "sender"
                ],
                "title": "ProspectEmailEvent"
            },
            "BatchChargeResult": {
                "properties": {
                    "external_charge_id": {
                        "type": "string",
                        "title": "External Charge Id",
                        "description": "The external ID provided in the request"
                    },
                    "charge_id": {
                        "type": "string",
                        "title": "Charge Id",
                        "description": "ID of the created charge if successful"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether this charge was created successfully"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Error message if creation failed"
                    }
                },
                "type": "object",
                "required": [
                    "external_charge_id",
                    "success"
                ],
                "title": "BatchChargeResult",
                "description": "Result of a single charge creation in a batch.",
                "example": {
                    "external_charge_id": "water_jan24_unit2a",
                    "charge_id": "018e2b7e-4d5e-7000-8000-000000000008",
                    "success": true
                }
            },
            "ProspectWebhookEvent": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ProspectUpdateWebhookEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectHandoffEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectEmailEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectTextEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectVoiceAIEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectOptOutEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectOptInEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectWebchatEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectInternalNoteEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectStatusChangeEvent"
                    },
                    {
                        "$ref": "#/components/schemas/ProspectOwnerUpdateEvent"
                    }
                ],
                "title": "ProspectWebhookEvent"
            },
            "CreateProspectResponse": {
                "properties": {
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    }
                },
                "type": "object",
                "required": [
                    "elise_prospect_id"
                ],
                "title": "CreateProspectResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "AppointmentResponse": {
                "properties": {
                    "appointment_id": {
                        "type": "string",
                        "title": "Appointment Id"
                    },
                    "tour_type": {
                        "$ref": "#/components/schemas/TourType"
                    },
                    "appointment_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Appointment Time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AppointmentStatus"
                    }
                },
                "type": "object",
                "required": [
                    "appointment_id",
                    "tour_type",
                    "appointment_time",
                    "status"
                ],
                "title": "AppointmentResponse"
            },
            "Resident": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the resident",
                        "example": "res_12345"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "title": "First Name",
                        "description": "Resident's first name",
                        "example": "Emma"
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 100,
                        "title": "Middle Name",
                        "description": "Resident's middle name",
                        "example": "Rose"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "title": "Last Name",
                        "description": "Resident's last name",
                        "example": "Johnson"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email",
                        "description": "Resident's primary email address",
                        "example": "emma.johnson@example.com"
                    },
                    "phone_numbers": {
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        },
                        "type": "array",
                        "title": "Phone Numbers",
                        "description": "List of resident's phone numbers"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this resident record was created",
                        "example": "2023-12-15T10:30:00Z"
                    },
                    "created_by": {
                        "type": "string",
                        "title": "Created By",
                        "description": "ID of user or system that created this record"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "When this resident record was last modified",
                        "example": "2024-01-01T14:20:00Z"
                    },
                    "updated_by": {
                        "type": "string",
                        "title": "Updated By",
                        "description": "ID of user or system that last updated this record"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Deleted At",
                        "description": "When this resident was soft-deleted (null if active)"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "created_at",
                    "created_by",
                    "updated_at",
                    "updated_by"
                ],
                "title": "Resident",
                "description": "A resident represents a person who lives or has lived in a property unit.\n\nResidents can have multiple lease relationships across different units and time periods.\nThis object contains their core contact information and identity details.",
                "example": {
                    "id": "res_12345",
                    "first_name": "Emma",
                    "middle_name": "Rose",
                    "last_name": "Johnson",
                    "email": "emma.johnson@example.com",
                    "phone_numbers": [
                        {
                            "type": "CELL",
                            "number": "+14155552671",
                            "is_primary": true
                        },
                        {
                            "type": "WORK",
                            "number": "+14155552672",
                            "is_primary": false
                        }
                    ],
                    "created_at": "2023-12-15T10:30:00Z",
                    "created_by": "usr_12345",
                    "updated_at": "2024-01-01T14:20:00Z",
                    "updated_by": "usr_12345"
                }
            },
            "Unit": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "unit_number": {
                        "type": "string",
                        "title": "Unit Number"
                    },
                    "number_of_bedrooms": {
                        "type": "integer",
                        "title": "Number Of Bedrooms"
                    },
                    "number_of_bathrooms": {
                        "type": "number",
                        "title": "Number Of Bathrooms"
                    },
                    "square_footage": {
                        "type": "integer",
                        "title": "Square Footage"
                    },
                    "floor": {
                        "type": "integer",
                        "title": "Floor"
                    },
                    "floorplan_name": {
                        "type": "string",
                        "title": "Floorplan Name"
                    },
                    "floorplan_url": {
                        "type": "string",
                        "title": "Floorplan Url"
                    },
                    "availability_stage": {
                        "type": "string",
                        "title": "Availability Stage"
                    },
                    "price_matrix": {
                        "$ref": "#/components/schemas/PriceMatrix"
                    },
                    "virtual_tour_link": {
                        "type": "string",
                        "title": "Virtual Tour Link"
                    },
                    "external_ids": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalIdForUnit"
                        },
                        "type": "array",
                        "title": "External Ids"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "unit_number",
                    "number_of_bedrooms",
                    "number_of_bathrooms",
                    "availability_stage"
                ],
                "title": "Unit"
            },
            "VirtualTourLinksResponse": {
                "properties": {
                    "virtual_tour_links": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Virtual Tour Links"
                    }
                },
                "type": "object",
                "required": [
                    "virtual_tour_links"
                ],
                "title": "VirtualTourLinksResponse",
                "description": "Response for virtual tour links update"
            },
            "LedgerSummary": {
                "properties": {
                    "lease_id": {
                        "type": "string",
                        "title": "Lease Id",
                        "description": "The lease ID",
                        "example": "018e2b7d-6a5d-7000-8000-000000000002"
                    },
                    "balance_due": {
                        "type": "number",
                        "title": "Balance Due",
                        "description": "Amount currently due (charges with due_date <= today)",
                        "example": 125.5
                    },
                    "total_balance": {
                        "type": "number",
                        "title": "Total Balance",
                        "description": "Total amount owed including future scheduled charges",
                        "example": 1125.5
                    },
                    "collections": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionsInfo"
                            }
                        ],
                        "title": "Collections",
                        "description": "Collections status for this lease"
                    },
                    "transactions": {
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "type": "array",
                        "title": "Transactions",
                        "description": "All financial transactions for this lease, sorted by date (newest first)"
                    }
                },
                "type": "object",
                "required": [
                    "lease_id",
                    "balance_due",
                    "total_balance",
                    "collections",
                    "transactions"
                ],
                "title": "LedgerSummary",
                "description": "Complete ledger view showing current balance and all financial activity for a lease.\n\nReturns transactions in a single chronological list, with each transaction including a\n'transaction_type' field to distinguish between:\n- **CHARGES**: Money owed by resident (rent, utilities, fees) - increases balance\n- **PAYMENTS**: Money received from resident - decreases balance\n- **ADJUSTMENTS**: Non-financial corrections (credits/debits for voids, write-offs) - can increase or decrease balance\n- **REVERSALS**: Financial reversals (NSF, payment returns) - increases balance\n\n**Balance Fields:**\n- **balance_due**: Amount currently owed (only charges with due_date <= today)\n- **total_balance**: Total amount owed including future scheduled charges\n\nWhen there are no future charges, balance_due equals total_balance.\n\nTransactions are sorted by transaction_date in descending order (most recent first).\nEach transaction includes only the fields relevant to its type - charge-specific fields\nare null for payments/adjustments, payment-specific fields are null for charges/adjustments, etc.\n\nFor charges with outstanding balances, the 'balance' field will be populated\nto show the remaining unpaid amount.",
                "example": {
                    "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                    "balance_due": 670.5,
                    "total_balance": 1670.5,
                    "collections": {
                        "status": "NOT_IN_COLLECTIONS"
                    },
                    "transactions": [
                        {
                            "id": "018e2b7e-1a2b-7000-8000-000000000005",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "CHARGE",
                            "amount": 1000.0,
                            "description": "March rent for Unit 2A",
                            "transaction_date": "2024-03-01",
                            "created_at": "2024-01-01T09:00:00Z",
                            "updated_at": "2024-01-01T09:00:00Z",
                            "charge_code": "RENT",
                            "charge_type": "RENT",
                            "due_date": "2024-03-01",
                            "balance": 1000.0
                        },
                        {
                            "id": "018e2b7d-7b7e-7000-8000-000000000001",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "CHARGE",
                            "amount": 1250.0,
                            "description": "Monthly rent for Unit 2A",
                            "transaction_date": "2024-02-01",
                            "created_at": "2024-02-01T08:00:00Z",
                            "updated_at": "2024-02-01T14:30:00Z",
                            "charge_code": "RENT",
                            "charge_type": "RENT",
                            "due_date": "2024-02-01",
                            "balance": 625.0
                        },
                        {
                            "id": "018e2b7d-8a3f-7000-8000-000000000003",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "PAYMENT",
                            "amount": 375.0,
                            "description": "Partial rent payment",
                            "transaction_date": "2024-01-15",
                            "created_at": "2024-01-15T14:30:00Z",
                            "updated_at": "2024-01-15T14:30:00Z",
                            "payment_method": "ACH"
                        },
                        {
                            "id": "018e2b7e-2b3c-7000-8000-000000000006",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "CHARGE",
                            "amount": 45.5,
                            "description": "Water & Sewer - January 2024",
                            "transaction_date": "2024-02-01",
                            "created_at": "2024-02-01T08:00:00Z",
                            "updated_at": "2024-02-01T08:00:00Z",
                            "charge_code": "WATER",
                            "charge_type": "UTILITIES",
                            "due_date": "2024-02-01",
                            "balance": 45.5
                        },
                        {
                            "id": "018e2b7d-bd4e-7000-8000-000000000010",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "REVERSAL",
                            "amount": 375.0,
                            "description": "Payment reversal - NSF",
                            "transaction_date": "2024-01-18",
                            "created_at": "2024-01-18T09:30:00Z",
                            "updated_at": "2024-01-18T09:30:00Z",
                            "payment_method": "ACH"
                        },
                        {
                            "id": "018e2b7d-9b2c-7000-8000-000000000004",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "ADJUSTMENT",
                            "amount": 250.0,
                            "description": "First month rent concession - $250 off",
                            "transaction_date": "2024-01-01",
                            "created_at": "2024-01-01T09:00:00Z",
                            "updated_at": "2024-01-01T09:00:00Z",
                            "adjustment_type": "CREDIT"
                        }
                    ]
                }
            },
            "AdjustmentType": {
                "type": "string",
                "enum": [
                    "CREDIT",
                    "DEBIT"
                ],
                "title": "AdjustmentType",
                "description": "An enumeration."
            },
            "AppointmentStatus": {
                "type": "string",
                "enum": [
                    "confirmed",
                    "cancelled"
                ],
                "title": "AppointmentStatus",
                "description": "An enumeration."
            },
            "Activity": {
                "properties": {
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "prospect_id": {
                        "type": "string",
                        "title": "Prospect Id"
                    },
                    "resident_id": {
                        "type": "string",
                        "title": "Resident Id"
                    },
                    "responsibility": {
                        "$ref": "#/components/schemas/Responsibility"
                    }
                },
                "type": "object",
                "required": [
                    "event",
                    "responsibility"
                ],
                "title": "Activity"
            },
            "PhoneNumberType": {
                "type": "string",
                "enum": [
                    "CELL",
                    "HOME",
                    "WORK",
                    "FAX",
                    "OTHER"
                ],
                "title": "PhoneNumberType",
                "description": "Phone number types"
            },
            "ProspectTextEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "Text",
                        "title": "Type",
                        "default": "Text"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "to_phone_number": {
                        "type": "string",
                        "title": "To Phone Number"
                    },
                    "from_phone_number": {
                        "type": "string",
                        "title": "From Phone Number"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "message",
                    "to_phone_number",
                    "from_phone_number",
                    "sender"
                ],
                "title": "ProspectTextEvent"
            },
            "Transaction": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the transaction",
                        "example": "018e2b7d-7b7e-7000-8000-000000000001"
                    },
                    "lease_id": {
                        "type": "string",
                        "title": "Lease Id",
                        "description": "The lease this transaction belongs to",
                        "example": "018e2b7d-6a5d-7000-8000-000000000002"
                    },
                    "transaction_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionType"
                            }
                        ],
                        "description": "Type of transaction"
                    },
                    "amount": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Amount",
                        "description": "Transaction amount (always positive)",
                        "example": 1250.0
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the transaction",
                        "example": "Monthly rent for Unit 2A"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Transaction Date",
                        "description": "Date the transaction occurred/takes effect",
                        "example": "2024-02-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this record was created in the system",
                        "example": "2024-02-01T08:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "When this record was last modified",
                        "example": "2024-02-01T08:00:00Z"
                    },
                    "charge_code": {
                        "type": "string",
                        "title": "Charge Code",
                        "description": "Charge code (charges & adjustments only)",
                        "example": "RENT"
                    },
                    "charge_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChargeType"
                            }
                        ],
                        "description": "Type of charge (charges only)"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Due Date",
                        "description": "Date the charge is due (charges only)",
                        "example": "2024-02-01"
                    },
                    "payment_method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethod"
                            }
                        ],
                        "description": "How the payment was made (payments only)"
                    },
                    "adjustment_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdjustmentType"
                            }
                        ],
                        "description": "Type of adjustment - credit or debit (adjustments only)"
                    },
                    "balance": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Balance",
                        "description": "Remaining unpaid balance (charges only, null if fully paid)",
                        "example": 625.0
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "lease_id",
                    "transaction_type",
                    "amount",
                    "description",
                    "transaction_date",
                    "created_at",
                    "updated_at"
                ],
                "title": "Transaction",
                "description": "Polymorphic transaction model representing any financial activity on a lease.\n\nAll transactions share common fields (id, lease_id, amount, description, date, type)\nwith type-specific fields included based on the transaction_type:\n\n- **CHARGES**: Include charge_code, charge_type, due_date, and balance fields\n- **PAYMENTS**: Include payment_method field\n- **ADJUSTMENTS**: Include adjustment_type field (non-financial corrections)\n- **REVERSALS**: Financial reversals (NSF, payment returns) - may include payment_method or charge_code\n\nType-specific fields are null when not applicable to the transaction type.\n\nTimestamps (created_at, updated_at) track when the record was created/modified in the system,\nwhile transaction_date reflects when the transaction actually occurred.",
                "examples": [
                    {
                        "summary": "Charge Transaction",
                        "description": "A charge transaction with charge-specific fields populated",
                        "value": {
                            "id": "018e2b7d-7b7e-7000-8000-000000000001",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "CHARGE",
                            "amount": 1250.0,
                            "description": "Monthly rent for Unit 2A",
                            "transaction_date": "2024-02-01",
                            "created_at": "2024-02-01T08:00:00Z",
                            "updated_at": "2024-02-01T08:00:00Z",
                            "charge_code": "RENT",
                            "charge_type": "RENT",
                            "due_date": "2024-02-01",
                            "balance": 625.0
                        }
                    },
                    {
                        "summary": "Payment Transaction",
                        "description": "A payment transaction with payment-specific fields populated",
                        "value": {
                            "id": "018e2b7d-8a3f-7000-8000-000000000003",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "PAYMENT",
                            "amount": 375.0,
                            "description": "Partial rent payment",
                            "transaction_date": "2024-01-15",
                            "created_at": "2024-01-15T14:30:00Z",
                            "updated_at": "2024-01-15T14:30:00Z",
                            "payment_method": "ACH"
                        }
                    },
                    {
                        "summary": "Adjustment Transaction",
                        "description": "An adjustment transaction with adjustment-specific fields populated",
                        "value": {
                            "id": "018e2b7d-9b2c-7000-8000-000000000004",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "ADJUSTMENT",
                            "amount": 250.0,
                            "description": "First month rent concession - $250 off",
                            "transaction_date": "2024-01-01",
                            "created_at": "2024-01-01T09:00:00Z",
                            "updated_at": "2024-01-01T09:00:00Z",
                            "adjustment_type": "CREDIT"
                        }
                    },
                    {
                        "summary": "Reversal Transaction",
                        "description": "A financial reversal transaction (NSF) with payment-specific fields",
                        "value": {
                            "id": "018e2b7d-ac3d-7000-8000-000000000005",
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "transaction_type": "REVERSAL",
                            "amount": 1250.0,
                            "description": "NSF - Insufficient funds for payment 018e2b7d-8a3f-7000-8000-000000000003",
                            "transaction_date": "2024-01-20",
                            "created_at": "2024-01-20T10:00:00Z",
                            "updated_at": "2024-01-20T10:00:00Z",
                            "payment_method": "ACH"
                        }
                    }
                ]
            },
            "BatchPaymentReversalsResponse": {
                "properties": {
                    "total_requested": {
                        "type": "integer",
                        "title": "Total Requested",
                        "description": "Number of reversals in the request"
                    },
                    "total_processed": {
                        "type": "integer",
                        "title": "Total Processed",
                        "description": "Number of reversals successfully processed"
                    },
                    "total_skipped": {
                        "type": "integer",
                        "title": "Total Skipped",
                        "description": "Number of reversals skipped (duplicates)"
                    },
                    "total_failed": {
                        "type": "integer",
                        "title": "Total Failed",
                        "description": "Number of reversals that failed to process"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/BatchPaymentReversalResult"
                        },
                        "type": "array",
                        "title": "Results",
                        "description": "Detailed results for each reversal"
                    }
                },
                "type": "object",
                "required": [
                    "total_requested",
                    "total_processed",
                    "total_skipped",
                    "total_failed",
                    "results"
                ],
                "title": "BatchPaymentReversalsResponse",
                "description": "Response from batch payment reversal.",
                "example": {
                    "total_requested": 1,
                    "total_processed": 1,
                    "total_skipped": 0,
                    "total_failed": 0,
                    "results": [
                        {
                            "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                            "external_reversal_id": "reversal_pmt_feb2024",
                            "reversal_transaction_id": "018e2b7e-9cad-7000-8000-00000000000d",
                            "success": true
                        }
                    ]
                }
            },
            "LeadSourcesResponse": {
                "properties": {
                    "sources": {
                        "items": {
                            "$ref": "#/components/schemas/PropertyLeadSource"
                        },
                        "type": "array",
                        "title": "Sources"
                    }
                },
                "type": "object",
                "required": [
                    "sources"
                ],
                "title": "LeadSourcesResponse"
            },
            "ProspectVoiceAIEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "VoiceAI",
                        "title": "Type",
                        "default": "VoiceAI"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "to_phone_number": {
                        "type": "string",
                        "title": "To Phone Number"
                    },
                    "from_phone_number": {
                        "type": "string",
                        "title": "From Phone Number"
                    },
                    "voice_recording_url": {
                        "type": "string",
                        "title": "Voice Recording Url"
                    },
                    "summary": {
                        "type": "string",
                        "title": "Summary"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "to_phone_number",
                    "from_phone_number"
                ],
                "title": "ProspectVoiceAIEvent"
            },
            "AppointmentRequest": {
                "properties": {
                    "tour_type": {
                        "$ref": "#/components/schemas/TourType"
                    },
                    "appointment_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Appointment Time"
                    }
                },
                "type": "object",
                "required": [
                    "tour_type",
                    "appointment_time"
                ],
                "title": "AppointmentRequest"
            },
            "BatchPaymentReversalItem": {
                "properties": {
                    "payment_id": {
                        "type": "string",
                        "title": "Payment Id",
                        "description": "ID of the payment to reverse",
                        "example": "018e2b7e-adbe-7000-8000-00000000000e"
                    },
                    "reason": {
                        "type": "string",
                        "maxLength": 1000,
                        "minLength": 1,
                        "title": "Reason",
                        "description": "Reason for reversal",
                        "example": "NSF"
                    },
                    "external_reversal_id": {
                        "type": "string",
                        "title": "External Reversal Id",
                        "description": "Your unique ID for idempotency",
                        "example": "reversal_pmt_feb2024"
                    }
                },
                "type": "object",
                "required": [
                    "payment_id",
                    "reason"
                ],
                "title": "BatchPaymentReversalItem",
                "description": "Individual payment reversal in a batch.",
                "example": {
                    "payment_id": "018e2b7e-adbe-7000-8000-00000000000e",
                    "reason": "NSF",
                    "external_reversal_id": "reversal_pmt_feb2024"
                }
            },
            "OccupantType": {
                "type": "string",
                "enum": [
                    "Primary",
                    "Roommate",
                    "Dependent",
                    "Guarantor",
                    "Other",
                    "Spouse"
                ],
                "title": "OccupantType",
                "description": "An enumeration."
            },
            "AppointmentAvailability": {
                "properties": {
                    "availability": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TourTypeAvailability"
                        },
                        "type": "object",
                        "title": "Availability"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "Timezone"
                    }
                },
                "type": "object",
                "required": [
                    "availability",
                    "timezone"
                ],
                "title": "AppointmentAvailability",
                "example": {
                    "availability": {
                        "guided": {
                            "available_tour_start_times": [
                                "2024-02-01T09:00:00-08:00",
                                "2024-02-02T09:00:00-08:00"
                            ],
                            "tour_duration_minutes": 45
                        },
                        "sgt": {
                            "available_tour_start_times": [
                                "2024-02-01T10:30:00-08:00",
                                "2024-02-02T10:30:00-08:00"
                            ],
                            "tour_duration_minutes": 30
                        }
                    },
                    "timezone": "America/Los_Angeles"
                }
            },
            "MarkAppointmentOutcomeResult": {
                "properties": {},
                "type": "object",
                "title": "MarkAppointmentOutcomeResult"
            },
            "TaskType": {
                "type": "string",
                "enum": [
                    "CollectionsEscalationDay",
                    "EvictionRisk",
                    "NeedsReply",
                    "InformationNeeded",
                    "MissedCall",
                    "FormerResidentDeactivated",
                    "CallBack",
                    "NoticeToVacate",
                    "LeaseGeneration",
                    "OptOut",
                    "ReminderTask",
                    "MentionTask",
                    "ToDoTask",
                    "TourFollowUpTask",
                    "ProactiveLeadActionTask",
                    "GenerateLeaseRenewalTask",
                    "ConfirmGeneratedLease",
                    "CounterSignLease",
                    "ApplicationReviewTask",
                    "EvictionNoticeGeneration",
                    "EvictionNoticeGenerationV2",
                    "SignBeforeServingNotice",
                    "SignBeforeServingNoticeV2",
                    "ServeEvictionNotice",
                    "ServeEvictionNoticeV2",
                    "EvictionAccountStatusUpdate",
                    "GenerateLeaseTask",
                    "UtilitiesQuestion",
                    "DataUploadTask",
                    "ResmanRecurringChargeTask",
                    "AigtLocksKeys",
                    "SetTurnCompletedTask",
                    "PandadocCounterSignLease",
                    "AgentActionNeeded",
                    "ExpiredNotice",
                    "OccupiedUnitResidentNoticeTask"
                ],
                "title": "TaskType",
                "description": "An enumeration."
            },
            "CollectionsStatus": {
                "type": "string",
                "enum": [
                    "NOT_IN_COLLECTIONS",
                    "IN_COLLECTIONS"
                ],
                "title": "CollectionsStatus",
                "description": "An enumeration."
            },
            "SurveyLinkType": {
                "type": "string",
                "enum": [
                    "PostTourSurvey"
                ],
                "title": "SurveyLinkType",
                "description": "An enumeration."
            },
            "ProspectStatusChangeEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "StatusChange",
                        "title": "Type",
                        "default": "StatusChange"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "status": {
                        "$ref": "#/components/schemas/EliseAI__prospects__model__types__ProspectStatus"
                    },
                    "cancellation_reason": {
                        "type": "string",
                        "title": "Cancellation Reason"
                    },
                    "cancellation_source": {
                        "type": "string",
                        "title": "Cancellation Source"
                    },
                    "cancellation_user_id": {
                        "type": "string",
                        "title": "Cancellation User Id"
                    },
                    "cancellation_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Cancellation Time"
                    },
                    "cancellation_notes": {
                        "type": "string",
                        "title": "Cancellation Notes"
                    },
                    "application_started_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Application Started Time"
                    },
                    "application_completed_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Application Completed Time"
                    },
                    "application_approved_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Application Approved Time"
                    },
                    "lease_started_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Lease Started Time"
                    },
                    "lease_completed_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Lease Completed Time"
                    },
                    "lease_approved_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Lease Approved Time"
                    },
                    "leased_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Leased Time"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "status"
                ],
                "title": "ProspectStatusChangeEvent"
            },
            "ProspectOwnerUpdateEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "OwnerUpdate",
                        "title": "Type",
                        "default": "OwnerUpdate"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "previous_elise_prospect_owner_id": {
                        "type": "string",
                        "title": "Previous Elise Prospect Owner Id"
                    },
                    "new_elise_prospect_owner_id": {
                        "type": "string",
                        "title": "New Elise Prospect Owner Id"
                    },
                    "previous_elise_prospect_owner_email": {
                        "type": "string",
                        "title": "Previous Elise Prospect Owner Email"
                    },
                    "new_elise_prospect_owner_email": {
                        "type": "string",
                        "title": "New Elise Prospect Owner Email"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id"
                ],
                "title": "ProspectOwnerUpdateEvent"
            },
            "ProspectInternalNoteEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "InternalNote",
                        "title": "Type",
                        "default": "InternalNote"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "sender": {
                        "type": "string",
                        "title": "Sender"
                    },
                    "mentioned_users": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Mentioned Users"
                    },
                    "mentioned_team": {
                        "type": "integer",
                        "title": "Mentioned Team"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "elise_property_id",
                    "message"
                ],
                "title": "ProspectInternalNoteEvent"
            },
            "CalendarAppointmentScheduledEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AppointmentScheduled",
                        "title": "Type",
                        "default": "AppointmentScheduled"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "calendar_event_id": {
                        "type": "integer",
                        "title": "Calendar Event Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "start_time": {
                        "type": "string",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "title": "End Time"
                    },
                    "tour_type": {
                        "type": "string",
                        "title": "Tour Type"
                    },
                    "leasing_agent_app_user_id": {
                        "type": "string",
                        "title": "Leasing Agent App User Id"
                    },
                    "leasing_agent_email": {
                        "type": "string",
                        "title": "Leasing Agent Email"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "calendar_event_id",
                    "elise_property_id",
                    "start_time",
                    "end_time",
                    "tour_type"
                ],
                "title": "CalendarAppointmentScheduledEvent"
            },
            "CreateBatchPaymentsRequest": {
                "properties": {
                    "payments": {
                        "items": {
                            "$ref": "#/components/schemas/BatchPaymentItem"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "title": "Payments",
                        "description": "Array of payments to create"
                    },
                    "skip_duplicates": {
                        "type": "boolean",
                        "title": "Skip Duplicates",
                        "description": "Skip payments with existing external_payment_ids",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "payments"
                ],
                "title": "CreateBatchPaymentsRequest",
                "description": "Create multiple payments in a single API call.",
                "example": {
                    "payments": [
                        {
                            "lease_id": "018e2b7d-6a5d-7000-8000-000000000002",
                            "amount": 1250.0,
                            "payment_date": "2024-02-15",
                            "external_payment_id": "pmt_feb2024_unit2a"
                        }
                    ],
                    "skip_duplicates": true
                }
            },
            "ExternalId": {
                "properties": {
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "Source system of the external ID",
                        "example": "YardiVoyager"
                    },
                    "id_type": {
                        "type": "string",
                        "title": "Id Type",
                        "description": "Type of external ID",
                        "example": "property"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External Id",
                        "description": "The external identifier value",
                        "example": "12345"
                    }
                },
                "type": "object",
                "required": [
                    "source",
                    "id_type",
                    "external_id"
                ],
                "title": "ExternalId"
            },
            "MarkAppointmentOutcomeRequest": {
                "properties": {
                    "outcome": {
                        "$ref": "#/components/schemas/AppointmentOutcome"
                    },
                    "outcome_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Outcome Time"
                    },
                    "unit_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Unit Ids",
                        "description": "Elise-specific unit IDs"
                    }
                },
                "type": "object",
                "required": [
                    "outcome",
                    "outcome_time"
                ],
                "title": "MarkAppointmentOutcomeRequest"
            },
            "VendorChatRequest": {
                "properties": {
                    "sender": {
                        "$ref": "#/components/schemas/VendorChatSender"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "vendor_prospect_id": {
                        "type": "string",
                        "title": "Vendor Prospect Id"
                    },
                    "prospect_id": {
                        "type": "string",
                        "title": "Prospect Id"
                    }
                },
                "type": "object",
                "required": [
                    "sender",
                    "message"
                ],
                "title": "VendorChatRequest"
            },
            "AppointmentOutcome": {
                "type": "string",
                "enum": [
                    "NoShow",
                    "Show"
                ],
                "title": "AppointmentOutcome",
                "description": "An enumeration."
            },
            "AppointmentCanceledEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AppointmentCanceled",
                        "title": "Type",
                        "default": "AppointmentCanceled"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "appointment_id": {
                        "type": "string",
                        "title": "Appointment Id"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "appointment_id"
                ],
                "title": "AppointmentCanceledEvent"
            },
            "PropertyType": {
                "type": "string",
                "enum": [
                    "multi_family",
                    "single_family",
                    "other"
                ],
                "title": "PropertyType",
                "description": "Types of properties managed in the system"
            },
            "BatchReversalResult": {
                "properties": {
                    "external_charge_id": {
                        "type": "string",
                        "title": "External Charge Id",
                        "description": "The external charge ID from the request"
                    },
                    "external_reversal_id": {
                        "type": "string",
                        "title": "External Reversal Id",
                        "description": "The external reversal ID if provided"
                    },
                    "adjustment_id": {
                        "type": "string",
                        "title": "Adjustment Id",
                        "description": "ID of the offsetting adjustment if successful"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether this reversal was processed successfully"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error",
                        "description": "Error message if reversal failed"
                    }
                },
                "type": "object",
                "required": [
                    "external_charge_id",
                    "success"
                ],
                "title": "BatchReversalResult",
                "description": "Result of a single charge reversal in a batch.",
                "example": {
                    "external_charge_id": "water_jan24_unit2a",
                    "external_reversal_id": "reversal_water_jan24_unit2a",
                    "adjustment_id": "018e2b7e-7a8b-7000-8000-00000000000b",
                    "success": true
                }
            },
            "LeaseStatus": {
                "type": "string",
                "enum": [
                    "Applicant",
                    "Renewing",
                    "Future",
                    "Current",
                    "Notice",
                    "Waitlist",
                    "Former",
                    "UnderEviction",
                    "Evicted",
                    "Cancelled",
                    "Collections",
                    "Other"
                ],
                "title": "LeaseStatus",
                "description": "An enumeration."
            },
            "CreateBatchReversalsRequest": {
                "properties": {
                    "reversals": {
                        "items": {
                            "$ref": "#/components/schemas/BatchReversalItem"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "minItems": 1,
                        "title": "Reversals",
                        "description": "Array of charges to reverse"
                    },
                    "skip_duplicates": {
                        "type": "boolean",
                        "title": "Skip Duplicates",
                        "description": "Skip reversals with existing external_reversal_ids instead of failing",
                        "default": true,
                        "example": true
                    }
                },
                "type": "object",
                "required": [
                    "reversals"
                ],
                "title": "CreateBatchReversalsRequest",
                "description": "Reverse multiple charges in a single API call.",
                "example": {
                    "reversals": [
                        {
                            "external_charge_id": "water_jan24_unit2a",
                            "reason": "Duplicate charge posted in error",
                            "external_reversal_id": "reversal_water_jan24_unit2a"
                        },
                        {
                            "external_charge_id": "trash_jan24_unit3b",
                            "reason": "Billing error - incorrect amount",
                            "external_reversal_id": "reversal_trash_jan24_unit3b"
                        }
                    ],
                    "skip_duplicates": true
                }
            },
            "ResolutionType": {
                "type": "string",
                "enum": [
                    "Replied",
                    "Ignored",
                    "Called",
                    "Accepted",
                    "Other"
                ],
                "title": "ResolutionType",
                "description": "An enumeration."
            },
            "Task": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "task_type": {
                        "$ref": "#/components/schemas/TaskType"
                    },
                    "trigger_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Trigger Time"
                    },
                    "trigger_event_id": {
                        "type": "string",
                        "title": "Trigger Event Id"
                    },
                    "resolution_user_email": {
                        "type": "string",
                        "title": "Resolution User Email"
                    },
                    "resolution_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Resolution Time"
                    },
                    "resolution_type": {
                        "$ref": "#/components/schemas/ResolutionType"
                    },
                    "responsibilities": {
                        "items": {
                            "$ref": "#/components/schemas/Responsibility"
                        },
                        "type": "array"
                    },
                    "prospect_id": {
                        "type": "string",
                        "title": "Prospect Id"
                    },
                    "resident_id": {
                        "type": "string",
                        "title": "Resident Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "task_type",
                    "trigger_time",
                    "trigger_event_id"
                ],
                "title": "Task"
            },
            "ExternalIdForUnit": {
                "properties": {
                    "source": {
                        "type": "string",
                        "title": "Source"
                    },
                    "id_type": {
                        "type": "string",
                        "title": "Id Type"
                    },
                    "external_id": {
                        "type": "string",
                        "title": "External Id"
                    }
                },
                "type": "object",
                "required": [
                    "source",
                    "id_type",
                    "external_id"
                ],
                "title": "ExternalIdForUnit"
            },
            "CalendarAgentUpdatedEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AgentUpdated",
                        "title": "Type",
                        "default": "AgentUpdated"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "calendar_event_id": {
                        "type": "integer",
                        "title": "Calendar Event Id"
                    },
                    "elise_property_id": {
                        "type": "string",
                        "title": "Elise Property Id"
                    },
                    "external_property_id": {
                        "type": "string",
                        "title": "External Property Id"
                    },
                    "elise_prospect_id": {
                        "type": "string",
                        "title": "Elise Prospect Id"
                    },
                    "external_prospect_id": {
                        "type": "string",
                        "title": "External Prospect Id"
                    },
                    "conversation_link": {
                        "type": "string",
                        "title": "Conversation Link"
                    },
                    "old_agent_user_id": {
                        "type": "string",
                        "title": "Old Agent User Id"
                    },
                    "old_agent_email": {
                        "type": "string",
                        "title": "Old Agent Email"
                    },
                    "new_agent_user_id": {
                        "type": "string",
                        "title": "New Agent User Id"
                    },
                    "new_agent_email": {
                        "type": "string",
                        "title": "New Agent Email"
                    },
                    "start_time": {
                        "type": "string",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "title": "End Time"
                    },
                    "tour_type": {
                        "type": "string",
                        "title": "Tour Type"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "calendar_event_id",
                    "elise_property_id",
                    "start_time",
                    "end_time",
                    "tour_type"
                ],
                "title": "CalendarAgentUpdatedEvent"
            },
            "AgentTakeoverEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "AgentTakeover",
                        "title": "Type",
                        "default": "AgentTakeover"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "reason": {
                        "type": "string",
                        "title": "Reason"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date"
                ],
                "title": "AgentTakeoverEvent"
            },
            "IdVerificationStatusEvent": {
                "properties": {
                    "event_id": {
                        "type": "string",
                        "title": "Event Id"
                    },
                    "type": {
                        "type": "string",
                        "const": "IdVerificationStatus",
                        "title": "Type",
                        "default": "IdVerificationStatus"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Event Date"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProspectVerificationStatus"
                            }
                        ],
                        "description": "The verification status result",
                        "example": "SUCCESSFUL"
                    },
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IdVerificationProvider"
                            }
                        ],
                        "description": "The ID verification provider that performed the verification",
                        "example": "checkpoint"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expiration Date",
                        "description": "When the verification expires (if applicable)",
                        "example": "2025-12-31T23:59:59Z"
                    },
                    "verification_id": {
                        "type": "string",
                        "title": "Verification Id",
                        "description": "External verification ID from the provider",
                        "example": "chk_12345abcde"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata",
                        "description": "Provider-specific metadata and additional verification details"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "event_date",
                    "status",
                    "provider"
                ],
                "title": "IdVerificationStatusEvent"
            }
        }
    }
}